[IBSheet] function doAction()
[1]  case "Search":
sheet1.DoSearch( "${ctx}/OrgMonthWorkSta.do?cmd=getOrgMonthWorkStaList", $("#sheet1Form").serialize());

[2]  case "Search":
   var sXml = sheet1.GetSearchData("${ctx}/SpeEduApr.do?cmd=getSpeEduAprList", $("#sheet1Form").serialize() );
   sXml = replaceAll(sXml,"shtcolEdit", "Edit");
   sheet1.LoadSearchData(sXml );

  for(var i = 1; i <= sheet1.RowCount(); i++){
   if(sheet1.GetCellValue(i, "closeSt") == "10005"){
    sheet1.SetRowEditable(i,0);
   }
  }

   for(let i = sheet1.HeaderRows(); i<sheet1.RowCount()+sheet1.HeaderRows(); i++){
     if (sheet1.GetCellValue(i, "applTget")  == "01") {
    	 sheet1.SetCellValue(i,"multYn","N");
    	 sheet1.SetCellEditable(i,"multYn",0);
     }
	 }

   let param = sheet1.GetRowData(i);
   param.searchSabun = $("#searchApplSabun").val();

    for (var i=1; i<=sheet1.LastRow(); i++){
     if (i == 1){
      sheet1.SetCellValue(0, "mon1", sheet1.GetCellValue(1,"titleMon1"));
      sheet1.SetCellValue(0, "mon2", sheet1.GetCellValue(1,"titleMon2"));
      sheet1.SetCellValue(0, "mon3", sheet1.GetCellValue(1,"titleMon3"));
      sheet1.SetCellValue(0, "mon4", sheet1.GetCellValue(1,"titleMon4"));
     }
     orgCd    = sheet1.GetCellValue(i, "orgCd");
     jikweeCd = sheet1.GetCellValue(i, "jikweeCd");

     if (oldOrgCd != orgCd){
      if (orgFirstRow > 0){
       sheet1.SetMergeCell(orgFirstRow,    sheet1.SaveNameCol("orgNm"),    i-orgFirstRow,    1);
       sheet1.SetMergeCell(jikweeFirstRow, sheet1.SaveNameCol("jikweeNm"), i-jikweeFirstRow, 1);


[연차촉진]
select * from TSYS920
where n_title like '%노무%';

[결재 로그 HISTORY]
THRI103_HIST

[쿼리로그]
TSYS998

[I/F로그 인터페이스로그]
INT_TSYS986


[IBSheet 중복 입력 validation]
		  /* 입력 벨리데이션은 상단에서 진행 때문에 시트 벨리데이션 필요없음 */
		  //if(!dupChk(sheet1,"inpGb|sdate|forCd|famCd|famNm|famYmd", true, true)){break;}

[결재] 한웨이 결재상태 연동
나, 16분
한웨이 결재 연동, 삭제관련 ZZ코드로, not in ('11', '23','33') 관련된 부분만 보면 될 것 같습니다.

hri/int-001
RestApi-maping-query.xml
   <!-- 결재 진행상태 수정 -->
	   <query id="hri_int_001">



[tunning]
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);
EXPLAIN PLAN FOR select ...

[연차기산일]
인사_인사기본_기준일
view text 이용

CASE 
WHEN ENTER_CD='KS' AND ELE_ID='D04' THEN
		 COLUMN_NAME 
ELSE NVL(F_COM_GET_LANGUAGE_MAPPING (:ssnEnterCd, 'thrm501', LANGUAGE_CD, :ssnLocaleCd), ELE_NM) 
END AS ELE_NM

    sELECT 연차기산일
		                 FROM 인사_인사기본_TEST
		                 WHERE 회사코드 = TRIM('KS') 
						 AND 사번      = TRIM('0800010');

[datpicker]
		$("#sYmd2").datepicker2({
			onReturn: function(date) {
			$("#eYmd2").val("");
				dateCheck(this,"sub",'main');
			}
		});
----------------------------------------------------------------

[sql developer]
C:\Users\hufsa\AppData\Roaming\SQL Developer
C:\Users\hufsa\AppData\Roaming\sqldeveloper


[IBSheet]
-- DEBUB : mergeRows.size() = $mergeRows.size()
-- DEBUB : velocityCount = ${velocityCount}
-- DEBUG : foreach.index = $foreach.index

[oracle]
UPDATE TBEN481 t
   SET (t.FAM_CNT, t.USE_CNT) = (
     SELECT b.USE_CNT, b.FAM_CNT
       FROM TBEN481 b
      WHERE b.ENTER_CD = t.ENTER_CD
        AND b.CHKID    = t.CHKID
        AND b.appl_seq = t.appl_seq
   )
 WHERE t.ENTER_CD = 'TP'
   AND t.CHKID    = 'ADMIN';


UPDATE THRM111_BE A
   SET A.SABUN = (
     SELECT B.CHG_SBN
       FROM SBN_CHANGE_LIST_BK B
      WHERE B.SBN = A.SABUN
        AND B.ENTER_CD='KS'
        AND B.CHANGE_STATUS_CD = 'Y'
   )
 WHERE EXISTS (
     SELECT 1
       FROM SBN_CHANGE_LIST_BK B
      WHERE B.SBN = A.SABUN
        AND B.ENTER_CD=A.ENTER_CD
        AND B.CHANGE_STATUS_CD = 'Y'
 );

[조건검색]
SELECT A.SEARCH_TYPE
	, A.CONDITION_DESC
	, A.SQL_SYNTAX
	, A.ADMIN_SQL_SYNTAX
	, C.VIEW_NM
FROM THRI201 A, THRI205 C
WHERE A.ENTER_CD   	= 'TP'
	AND A.SEARCH_SEQ 	= '99000028'
	AND A.VIEW_CD		= C.VIEW_CD(+);
---------------------------------------------------------------------------------
[복리후생 담당자 권한 관리]
시스템 > 시스템관리 > 시스템사용기준관리  : "복리"
GRP_CD_BEN_MANAGER	복리후생 담당자 권한	화면 하드코딩 방지를 위한 변수설정	Character	40,10,37


----------------------------------------------------------------------------------
[gt]
>git add .
>git commit -m "git message..."
>git push


 ! [remote rejected] main -> main (push declined due to repository rule violations)
error: failed to push some refs to 'https://github.com/hufsan87/db-sql.git'

PS C:\dev_vsc\oracle_plsql> git log --oneline

8ebbd92 (HEAD -> main) dev, prd 설정파일(20250514 현재))
78f13f8 (origin/main) local web.xml BasicAuth 무효화  modify
8ba0dcf local web.xml BasicAuth 적용 modify

(8ba0dcf^ : 8ba0dcf의 부모)

>git log --oneline =>문제 git id 확인
>git reset --soft 8ba0dcf^ => 문제 git id의 부모에 대하여
>git add was/local/opti.properties
>git commit -m "Remove secrets from opti.properties and switch to env vars"
>git push --force-with-lease

 

------------------------------------------------------------------------------------
[[THRM151에서 상태변경 시작/종료 LAG로 그룹핑]]

SELECT *
FROM (
  SELECT 
    A.ENTER_CD,
    A.SABUN,
    A.SDATE,
    
    -- 다음 상태 시작일 -1 → 현재 상태의 종료일로 간주
    NVL(TO_CHAR(
      TO_DATE((
        SELECT MIN(B.SDATE)
        FROM THRM151 B
        WHERE B.ENTER_CD = A.ENTER_CD
          AND B.SABUN = A.SABUN
          AND B.SDATE > A.SDATE
          AND B.STATUS_CD != A.STATUS_CD
      ), 'YYYYMMDD') - 1, 'YYYYMMDD'
    ), '99991231') AS EDATE2,

    A.EDATE,
    A.STATUS_CD,

    LAG(A.STATUS_CD) OVER (
      PARTITION BY A.ENTER_CD, A.SABUN 
      ORDER BY A.SDATE
    ) AS PREV_STATUS_CD

  FROM THRM151 A
  WHERE A.ENTER_CD = 'HX'
    AND A.SABUN = '20120026'
)
WHERE STATUS_CD != PREV_STATUS_CD OR PREV_STATUS_CD IS NULL
ORDER BY EDATE DESC;

---------------------------------------------------------------------------------------------------------
Basic Auth
https://hrmdev.hanjinkal.com/api/v1/hrm/int-001?enter-cd=HX&sabun=20230030

hanpaws_apigee_dev
+YN)NggudI^BsXqr
$2a$10$UKFOFDOwk/rZasjcw1WOwODzWkaFTdu.yMUrSN26wrrAv4vnc79Yy (hanpaws_apigee_dev)

hanpaws_apigee_prd
mTWvLqzXkdwp4fq3
$2a$10$emiD.vRh5sAItBhH7h7kD.M9pCDjGs6LHVuz7JXmtCdhvpCxjqnie (hanpaws_apigee_prd)

context-security.xml
opti.properties
web.xml

CrytoUtil.java
ErrorController.java

-------------------------------------------------------
V24	배우자출산
V41	자녀출산

15 출산

---------------------------------------------------------------------------------------------------------
(3/18)
		progressBar(true) ;
		setTimeout(
		 function(){
			 param = "searchYm=" + $( "#searchYm" ).val();
			 data = ajaxCall("${ctx}/BenRealAddressMgr.do?cmd=prcInsertAddrNew", param,false);
		   if(!data.Result.Code) {
			    alert("정상 처리되었습니다.");
			    progressBar(false) ;
			    doAction1('Search');
	       }else{
	        alert("처리중 오류가 발생했습니다.\n"+data.Result.Message);
	        progressBar(false) ;
	       }
			 }, 100);
    break;
---------------------------------------------------------------------------------------------------------

(3/13)
--한진관광 임원숙박비
  한진정보통신 의료비 메뉴 (현재 안쓰는 듯)
  => 임원숙박비 메뉴로 사용, 작업, 마감 등록하여 급여 반영


--타각   모바일 타각 모바일타각
select * from ttim720; --모바일
select * from ttim331 where --지문(secccom)
--ymd like '2025021%'
in_hm is not null
and enter_cd='HX' and sabun='09700062'
order by ymd desc;

--구글시트
=ARRAYFORMULA(IF(ROW(A1:A10000), "국내", ""))

----------------------------------------------------------
[s3]
>netstat -na|grep -i 18081
>ps -ef|grep -i s3
/home/appadmin/INTERFACE/S3_API/startup.sh

select * From file_mng where crdt>=systimestamp-50
order by crdt desc;

(bucket_name)
dev : hr-attachment-s3/, prd : hanpaws-attachment-s3

$aws s3 ls s3://hr-attachment-s3/company/
$aws s3 ls s3://hanpaws-attachment-s3/company/

!!HR 주요 테이블 목록
-----------------------------
TORG900 회사 도메인정보
TSYS903 DB 오류 로그확인
TSYS005 코드관리
TSYS305 SSO 이메일, 로그인실패 카운트

[interface log]
select * from int_tsys986;

[인사마스터]
THRM100

[발령]
THRM151
THRM191

[결재]
THRI103
THRI107

[지연쿼리]

[월간 삭제]
TSYS998
INT_TSYS986

[복리후생 작업 마감]
TBEN777 (작업), TBEN997(INSERT하는데, 왜하는진 모르겠다??)
TBEN991 (마감상태) CLOSE_ST
	10001	작업전
	10003	작업
	10005	마감


!아래 2군데 등록해야, TBEN777 생성됨
급여관리 > 복리후생마감 > 급여연계처리기준관리 > 복리후생마감코드관리  
급여관리 > 복리후생마감 > 급여연계처리기준관리 > 복리후생급여항목코드  
----------------------------------------------------------------------------------
SELECT
    index_name,  -- 인덱스 이름
    column_name, -- 인덱스에 포함된 컬럼 이름
    column_position -- 인덱스 내 컬럼 순서 (1부터 시작)
FROM
    all_ind_columns  -- 모든 테이블의 인덱스 정보를 담고 있는 뷰 (user_ind_columns, dba_ind_columns 등도 사용 가능)
WHERE
    table_name = 'YOUR_TABLE_NAME'  -- 조회하려는 테이블 이름 (대문자로 입력)
ORDER BY
    index_name, column_position;  -- 인덱스 이름과 컬럼 순서로 정렬
-----------------------------------------------------------------------------------
JOIN 종류	설명
INNER JOIN	두 테이블에서 일치하는 데이터만 반환 (= JOIN)
LEFT JOIN	왼쪽 테이블의 모든 데이터 + 일치하는 데이터 (없으면 NULL)
RIGHT JOIN	오른쪽 테이블의 모든 데이터 + 일치하는 데이터 (없으면 NULL)
FULL JOIN	두 테이블의 모든 데이터 반환 (일치하지 않으면 NULL)
CROSS JOIN	모든 행의 조합 (곱집합, Cartesian Product)
SELF JOIN	같은 테이블을 조인 (예: 직원과 매니저 관계)
OUTER JOIN (+)	구식 Oracle OUTER JOIN (비추천)
--------------------------------------------------------------------------
테이블 용량
WITH table_space AS (
  -- 테이블 자체의 공간
  SELECT bytes
  FROM user_segments
  WHERE segment_name = UPPER('TSYS998')
  
  UNION ALL
  
  -- 해당 테이블에 속한 인덱스 공간
  SELECT bytes
  FROM user_segments
  WHERE segment_name IN (
    SELECT index_name
    FROM user_indexes
    WHERE table_name = UPPER('TSYS998')
  )
  
  UNION ALL
  
  -- 해당 테이블에 속한 LOB(예: LOBSEGMENT, LOB INDEX) 공간
  SELECT bytes
  FROM user_segments
  WHERE segment_name IN (
    SELECT segment_name
    FROM user_lobs
    WHERE table_name = UPPER('TSYS998')
  )
)
SELECT ROUND(SUM(bytes) / 1024 / 1024 / 1024) AS total_size_gb
FROM table_space;
------------------------------------------------------------------------------------
* DB로그 확인
SELECT * fROM TSYS903
WHERE BIZ_CD='BEN'
AND OBJECT_NM='P_BEN_PAY_DATA_CREATE'
AND ENTER_CD='HG'
AND ERR_LOCATION='00001'
ORDER BY CHKDATE DESC;
---------------------------------------------------------
* 사대보험, 급여연계
--WelfarePayDataMgr-mapping-query.xml ("작업")
SELECT pay_action_cd,ben_gubun,count(*)
fROM TBEN777 
WHERE ENTER_CD='TP'
group by pay_action_cd,ben_gubun
order by 1 desc,2;
------------------------------------------------------------

 //인사헤더에서 이름 변경 시 호출 됨
 function setEmpPage() {
  $("#searchSabun").val($("#searchUserId").val());
  doAction1("Search");
 }


P_HRI_AFTER_PROC_EXEC
자가보험료 723, selfInsPayAppDet.js



-------------------------------------------------------------
sparrow
1548 - 07월 (05/13)
1900 - 08월 (08/07)
1962 - 09월 (08/29)
2152 - 10월 (10/28)
2264 - 11월 (11/27)
2392 - 12월 (01/07)
--------------------------
[지연쿼리]
연장근무결과보고
	TTIM120_V_KS
		TTIM111_V
			TTIM111
			TTIM110


----------------------------
create index log
--CREATE INDEX idx_tben833_enter_cd_prov_yy ON TBEN833 (ENTER_CD, PROV_YY);
--CREATE INDEX idx_tben834_enter_cd_prov_yy_sabun_appl_seq ON TBEN834 (ENTER_CD, PROV_YY, SABUN, APPL_SEQ);

CREATE INDEX idx_tben834_enter_cd_appl_seq_sabun_prov_yy ON TBEN834 (ENTER_CD, APPL_SEQ, SABUN, PROV_YY);
CREATE INDEX idx_tben833_enter_cd_sabun_prov_yy ON TBEN833 (ENTER_CD, SABUN, PROV_YY);

----------------------------------------------------------------
조건검색
  - 만들기, 
  - 사용하기 : 쿼리, 화면?
급여계산 - 복리후생
   - 마감?
   - 급여마감->신협
   - 복리후생마감 -> 급여?
  
------------------------------------------------------------------------
<ibleaders.js>
    //2024.11.20
license:"W2FtSztPKCdzaDY1YjJxbn9NNREsD3AnZmY3PCgjZjVgb0R8G2YWOmlmKXA5f3t8Pjs/CnoTdgF0ZHknZDBxJ2F0J2xTMllgByMoaDtne2MxOmBvJxEnF3FBCyFzOG1oPzZ6Nmw/V3YOPQB1J2QgeSYyKXQiZR0ZekB6Uzl/cCprIjw6ZGxzJwshTmYRKCJzJgJqYjtsKng+QTJdLUYtMn50eSZte2wyPG5YYR8pC3AiMXFsfixuOyUwbVZ/GSgAdiIkMGp6dCN1diErUydJPhs3eyo5azY+Kjp7by8TZwB8CyIwZDx3Lz8jamhwKwQ0UG8ANWE3fi52aykydi5tUDFfPQAsZDVsJTxjez5zMX5aYA8oQywgfj52cnExagBQGQsmRzRPe3QnOWdgNGUx",

<oracle kill session>
ALTER SYSTEM KILL SESSION 'sid,serial#';

SELECT s.sid, s.serial#, p.spid, s.username, s.status, s.osuser,s.last_call_et,s.program,s.module, s.action
FROM v$session s
JOIN v$process p ON s.paddr = p.addr
WHERE 1=1
and s.status = 'ACTIVE' 
AND s.last_call_et > 300
and s.username='PAWS_HG_PRD'
order by s.last_call_et desc; -- 3

select * From v$session;
select * from v$transaction;

--트랜잭션 중인 세션
SELECT s.sid, s.serial#, s.username, t.status
FROM v$session s
JOIN v$transaction t ON s.saddr = t.ses_addr
WHERE s.status = 'ACTIVE';
----------------------------------------------------------------------------------------------------------------------------


<2층 프린터>
10.23.14.158
c5005 d

hrmdev.kas.co.kr
 10.119.212.198
 10.119.213.22

10.119.212.11 >>>>>> 10.23.14.145, 10.119.212.198 
10.119.212.11 >>>>>> 10.23.14.145, 10.119.213.22 


10.119.213.11 >>>>>> ?

------------------------------------------------------------
<nginx> appadmin q1w2e3Q!W@E#0617
>sudo su - root
>/data/web/nenginx/sbin/stop.sh  
>/data/web/nenginx/sbin/start.sh 

<jboss> jboss ? 
(jenkins)
------------------------------------------------------------
tomcat port 죽이기
1. netstat -a -o 입력!
2. 8080 포트에 해당하는 pid를 찾아서 아래 명령어안에 넣어주기!
3.taskkill /f /pid 입력!

----------------------------------------------------------
<Oracle>
Oracle Statspack, Oracle AWR 및 Oracle SQL Tuning Advisor
12c 부터 c##계정이름 으로 지정하도록 바뀜.. 
그렇게 하지 않기 위해서 sys as sysdba 로 접속후  
( sqlplus sys/sys_password as sysdba ) alter session set "_ORACLE_SCRIPT"=true; 설정
출처: https://realblog.tistory.com/25 [dev jeonghun:티스토리]

▶ 테이블
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '10' MINUTE)
 -- 3시간전 데이터 조회 
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '3' HOUR)

▶ 프로시저 SELECT * FROM DBA_SOURCE AS OF TIMESTAMP (SYSTIMESTAMP-INTERVAL '수치' 단위) WHERE NAME = '프로시저이름'
출처: https://goddaehee.tistory.com/56 [갓대희의 작은공간:티스토리]

SELECT *
FROM USER_OBJECTS
WHERE OBJECT_TYPE IN ('PROCEDURE','FUNCTION')
AND OBJECT_NAME = 'F_TIM_WORK_INFO_TEMP_NEW';

<PK>
SELECT A.TABLE_NAME
     , A.CONSTRAINT_NAME
     , B.COLUMN_NAME     
     , B.POSITION
  FROM ALL_CONSTRAINTS  A
     , ALL_CONS_COLUMNS B
 WHERE A.TABLE_NAME      = 'JOB_HISTORY'
   AND A.CONSTRAINT_TYPE = 'P' 
   AND A.OWNER           = B.OWNER
   AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME
 ORDER BY B.POSITION;

<index>
SELECT a.table_name
     , a.index_name
     , a.column_name
     , b.comments
  FROM all_ind_columns a
     , all_col_comments b
 WHERE a.table_name = 'THRM123'
   AND a.table_owner = b.owner
   AND a.table_name = b.table_name
   AND a.column_name = b.column_name
 ORDER BY a.index_name
        , a.column_position;

<오라클 에러 ORA-01861 리터럴이 형식 문자열과 일치하지 않음>
date타입에 String형을 넣으려 하거나, date형과 String형을 비교 하려고 할때 발생

-----------------------------------------------------------------------------------------------
<linux>
	>sudo su - wasdmin
설치된 모든 패키지 목록
	>yum list installed 
------------------------------------------------------------------------
<intelliJ SSO> web.xml
    <security-constraint>
    <web-resource-collection>
        <web-resource-name>SSL Forward</web-resource-name>
        <url-pattern>/*</url-pattern>
    </web-resource-collection>
    <user-data-constraint>
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
    </security-constraint>
--------------------------------------------------------------------------
select a.table_name,a.comments,b.column_name,b.comments
from USER_TAB_COMMENTS a,USER_col_comments b
WHERE a.table_name=b.table_name
and a.table_name NOT like 'SYS%'
 and a.table_name like 'THRM124';
--and b.column_name LIKE '%MAIL%';

-- DB 오류 로그 DB ERROR --
SELECT * FROM TSYS903
WHERE OBJECT_NM='P_BEN_MTH_SHLOAN_HIST_CRE'
ORDER BY CHKDATE DESC,SEQ DESC;

--급여일자 PAY__ACTION_CD
SELECT * FROM TCPN201
WHERE PAY_ACTION_CD IN (
'202312006',
'202312007'
);
202312007	2023.12.21 월급여
202312006	2023.12.21 정기상여

<신청서상태, 결재>R10010
11	임시저장
21	결재처리중
23	결재반려
31	수신처리중
33	수신반려
99	처리완료
ZZ	취소완료

<결재상태 thri107 agreeStatusCd>
R10050	결재상태
10	결재요청
20	결재완료
30	반려
40	합의완료
50	반려

GUBUN 구분(0:본인,1:결재,3:수신)
AGREE_SEQ 결재순번


<공통 코드>
SELECT * FROM TSYS005 WHERE GRCODE_CD='H40001';
SELECT * FROM TSYS013 WHERE ORD_TYPE_CD='LAT_UPL_KOR'; --발령

<인사 발령 코드 발령종류관리(TSYS013)>
select * from thrm100 where sabun='20120026';
select * from thrm151 where sabun='20120026' order by edate desc;
select * from thrm191 where sabun='20120026' order by ord_ymd desc;

select * from thrm100 where sabun='2100036';
select * from thrm100 where sabun='2000665';
select * from thrm151 where sabun='2000665' order by edate desc;
select * from thrm191 where sabun='2000665' order by ord_ymd desc;

<근태 코드>
SELECT WORK_CD AS CODE
	 , NVL(F_COM_GET_LANGUAGE_MAPPING ('KS', 'ttim015', LANGUAGE_CD, ''), WORK_NM) AS CODE_NM
FROM TTIM015
WHERE ENTER_CD = 'KS'
ORDER BY SEQ;

근태관리 > 근무스케줄관리 > 개인근무스케줄생성  
근태관리 > 근태신청 > 근태일괄업로드
근태관리 > 일근무관리 > 일근무관리


<복리후생 마감/취소>
P_BEN_PAY_DATA_CLOSE
P_BEN_PAY_DATA_CLOSE_CANCEL

<경조 APPLID>
SELECT *
FROM THRI103 A
WHERE A.APPL_SEQ = '20240416000297'

SELECT *
FROM TBEN475
---------------------------------------------------------------------
<결재>
setValue
P_HRI_AFTER_PROC_EXEC
THRI103 신청서마스터
THRI107 신청서결재내역

TTIM301
---------------------------------------------------------------------
<권한그룹코드 권한그룹>
10	관리자(ADMIN)
15	인사담당자
35	근태담당자
40	복리후생담당자
50	근태등록자
60	근무담당
99	임직원공통
30	조직장

const grpCd = "10";
let payInfoEditYn = 0, payInfoEdit2Yn= 0
	, ssnGrpCdBenManager = ("40,10").split(',')	// 복리후생담당자(관리자)
	, ssnGrpCdDepAffairs = ("35").split(',') // 부서서무
	;
---------------------------------------------------------------------
<주민번호>
SELECT
    주민등록번호_컬럼,
    CASE SUBSTR(주민등록번호_컬럼, 7, 1)
        WHEN '1' THEN '남성'
        WHEN '3' THEN '남성'
        WHEN '2' THEN '여성'
        WHEN '4' THEN '여성'
        WHEN '5' THEN '외국인 남성'
        WHEN '7' THEN '외국인 남성'
        WHEN '6' THEN '외국인 여성'
        WHEN '8' THEN '외국인 여성'
        ELSE '알 수 없음' -- 유효하지 않거나 특수한 경우
    END AS 성별
FROM
    당신의_테이블_이름;
SELECT
    주민등록번호_컬럼,
    CASE SUBSTR(주민등록번호_컬럼, 7, 1)
        WHEN '1' THEN '19'
        WHEN '2' THEN '19'
        WHEN '5' THEN '19'
        WHEN '6' THEN '19'
        WHEN '3' THEN '20'
        WHEN '4' THEN '20'
        WHEN '7' THEN '20'
        WHEN '8' THEN '20'
        ELSE NULL -- 유효하지 않거나 알 수 없는 경우
    END AS 출생년도_앞두자리
FROM 
    당신의_테이블_이름;

update thrm111_be
set fam_ymd = 
decode(substr(CRYPTIT.DECRYPT(TRIM(famres), 'HX'),7,1),
'0','18',
'1','19',
'2','19',
'3','20',
'4','20',
'5','19',
'6','19',
'7','20',
'8','20',
'9','18')||substr(CRYPTIT.DECRYPT(TRIM(famres), 'HX'),1,6)
where substr(CRYPTIT.DECRYPT(TRIM(famres), 'HX'),1,6) != substr(fam_ymd,3)
and length(CRYPTIT.DECRYPT(TRIM(famres), 'HX'))=13
and enter_cd='HX'
and fam_ymd=to_char(chkdate,'yyyymmdd');

<학자금>
H20155	전공계열
51	공학계열
52	예체능계열
53	의학계열
54	이학계열
55	인문사회계열
56	자연과학계열

B60051	학자금세부코드
51	공학계열
52	예체능계열
53	의학계열
54	이학계엵
55	인문사회계열
56	자연과학계열

<공통코드>
SELECT A.CODE
     , A.CODE_NM
     , A.NOTE2
FROM TSYS005 A , TSYS001 B
WHERE A.GRCODE_CD	= B.GRCODE_CD
    --AND A.ENTER_CD		= 'HX'
    AND A.GRCODE_CD		= 'B60050'
    AND A.USE_YN 		  = 'Y';

<비번리셋>


PKG_COM_INTERFACE_HRM_API
	, CryptIT.crypt(SUBSTR(NVL(REPLACE(F_COM_GET_RESNO(C_DATA.ENTER_CD, C_DATA.SABUN) ,'-',''), '!gkswlstkfkd?') ,7,7)   ,C_DATA.ENTER_CD)  AS PASSWORD        -- 비밀번호
	--, CryptIT.crypt(NVL(SUBSTR(REPLACE(C_DATA.RES_NO,'-',''),7,13),'!gkswlstkfkd2023')   ,C_DATA.ENTER_CD)  AS PASSWORD        -- 비밀번호
	--, CryptIT.crypt(SUBSTR(REPLACE(C_DATA.SABUN,'-',''),7,13),C_DATA.ENTER_CD)                            AS PASSWORD        -- 비밀번호
	--, CryptIT.crypt('gkswlstkfkd',C_DATA.ENTER_CD)          AS PASSWORD        -- 비밀번호 (!한진사랑?)
PKG_COM_INTERFACE_HRM_API_MIG
	, CryptIT.crypt(SUBSTR(NVL(REPLACE(F_COM_GET_RESNO(C_DATA.ENTER_CD, C_DATA.SABUN) ,'-',''), '!gkswlstkfkd?') ,7,7)   ,C_DATA.ENTER_CD)  AS PASSWORD        -- 비밀번호
	--, CryptIT.crypt(NVL(SUBSTR(REPLACE(C_DATA.RES_NO,'-',''),7,13),'!gkswlstkfkd2023')   ,C_DATA.ENTER_CD)  AS PASSWORD        -- 비밀번호
	--, CryptIT.crypt(SUBSTR(REPLACE(C_DATA.SABUN,'-',''),7,13),C_DATA.ENTER_CD)                            AS PASSWORD        -- 비밀번호
stkfkd?
<login msg 로그인 메세지>
SELECT B.KEY_ID AS KEY_ID, B.KEY_TEXT
FROM TLAN150 A, TLAN151 B
WHERE A.KEY_LEVEL  = B.KEY_LEVEL
    AND A.KEY_ID = B.KEY_ID
    AND A.KEY_LEVEL = 'login'
    AND B.LANG_CD || '_' || B.COUNTRY_CD = 'ko_KR';

<로그인 fail count>
SELECT * FROM TSYS305
WHERE SABUN='test128';

update tsys305
set login_fail_cnt=0
where sabun='test128';

<timestamp recovery>
SELECT *
	FROM tben751
	AS OF TIMESTAMP (TO_DATE('2024-02-25 09:00:00', 'YYYY-MM-DD HH24:MI:SS'));
-- 10초전 데이터 조회
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '10' SECOND)
WHERE 컬럼 = 'A'; -- 필요에 따라서 조건문

-- 10분전 데이터 조회
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '10' MINUTE)
 
-- 3시간전 데이터 조회 
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '3' HOUR)

-- 1일전 데이터 조회 
SELECT  *  FROM 테이블 AS OF TIMESTAMP(SYSTIMESTAMP-INTERVAL '1' DAY)

[학자금]
TBEN751	학자금 신청/승인	INT_AMT	입학금
TBEN751	학자금 신청/승인	ATD_AMT	등록금
TBEN751	학자금 신청/승인	STD_AMT	학생회비
TBEN751	학자금 신청/승인	APPL_MON	신청금액(한화)
TBEN751	학자금 신청/승인	APPL_NOTE	비고(신청)
TBEN751	학자금 신청/승인	DEPT_CHK_YN	부서확인
TBEN751	학자금 신청/승인	PAY_AMT	지급금액

<기준> TBEN_750

SCH_LOC_CD 국내외 구분 코드 B20000
	0 : 국내
	1 : 국외
SCH_TYPE_CD 학자금구분 B60050
	10 : 고교
	20 : 대학
	30 : 전문대학
	40 : 장애인자녀 특수교육비 (HG) - 공통코드에 등록은 되어 있는데, 기준에는 안쓰고 있네..(2/26)

SCH_SUP_TYPE_CD 학자금세부코드 B60051
	10	고교

	20	전문대학(2년제)
	30	전문대학(3년제)
	40	대학
	50	의과대학

	60	대학원

	99	기타
SCH_
-----------------------------------------------------------------------------------------------------------------------------------------------------
<발령>
각종코드 https://docs.google.com/spreadsheets/d/1qK26jnZWquPFwpnPAmaai2sHrIY4E8KFov1xR5FMRzs/edit#gid=192211976
	(예)
	COMPANY	CODETYPE	CODETYPENAME	CODE	CODENAME	OLD_CODE	OLD_CODENAME	NOTE	CRDT	CRNM	SN
	HX	Employee_Types	사원유형	CWT_01	파견직(그룹사)	10	정규직	[NULL]	[NULL]	[NULL]	[NULL]
	HX	Employee_Types	사원유형	CWT_02	파견직(그룹사 외)	10	정규직	[NULL]	[NULL]	[NULL]	[NULL]
	HX	Employee_Types	사원유형	ETS_01	정규직	10	정규직	[NULL]	[NULL]	[NULL]	[NULL]	
	HX	Employee_Types	사원유형	ETS_02	비정규직	20	비정규직	[NULL]	[NULL]	[NULL]	[NULL]
	HX	Employee_Types	사원유형	ETS_03	임원직	10	정규직	[NULL]	[NULL]	[NULL]	[NULL]
	HX	Employee_Types	사원유형	ETS_05	무기직	30	무기직	[NULL]	[NULL]	[NULL]	[NULL]
	HX	Employee_Types	사원유형	ETS_07	계약직	20	비정규직	[NULL]	[NULL]	[NULL]	[NULL]

-----------------------------------------------------------------------------------------------------------------------------------------------------
<복리후생 한웨이 결재>
 * 경조만 예외
일반       : hr 신청 => 한웨이 결재 연동 => hr승인
경조신청 : hr 신청 => hr 승인 => 한웨이 결재 연동	

*한웨이결재 연동
	THRI103에 레코드 두개 생성됨 (신청서 번호가 다름)
	DOCNO가 있는것들

	SELECT * FROM THRI103
	WHERE 
	 ENTER_CD='KS'
	AND TITLE LIKE '%경조%'
	--AND APPL_SABUN='1103872'
	ORDER BY CHKDATE DESC;
-------------------------------------------------------------------------------------------------
<로그인 login>
TSYS305

<create index>
//로그인 체크
function isExistUser() {
$('#chgUser').trigger('click'); --사요자 변경
---------------------------------------------------------------------------
<result cache>
create or replace FUNCTION F_TIM_GET_ORG_CD_KS (
                      P_ENTER_CD         IN VARCHAR2, -- 회사코드
                      P_SABUN             IN VARCHAR2, -- 사원번호
                      P_DATE            IN VARCHAR2  -- 기준일자
)
    RETURN VARCHAR2
    RESULT_CACHE
    RELIES_ON (TTIM111_V)
IS
---------------------------------------------------------------------------
<원소속 근무조 부서> 파견
select a.sabun,b.org_cd as "원소속",
c.org_cd as "근무조",
F_COM_GET_ORG_NM(A.ENTER_CD, b.org_cd, NVL(REPLACE('2024-04-01' ,'-',''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS "원소속",
F_COM_GET_ORG_NM(A.ENTER_CD, c.org_cd, NVL(REPLACE('2024-04-01' ,'-',''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS "근무조"
from thrm100 a, 
(select d.*
from thrm151 d
where d.sdate = (
    select max(c.sdate) 
    From thrm151 c
    where c.sabun=d.sabun)) b,
(select e.*
from ttim111 e
where e.sdate = (
    select max(f.sdate) 
    From ttim111 f
    where f.sabun=e.sabun)) c
where
 a.sabun=b.sabun
and a.sabun=c.sabun
and b.org_cd!=c.org_cd;
---------------------------------------------------
<KS 근무조>
근무조 VS 비용센터
	회사-DIV_CODE-RESP_CT-CC_CD-(회사별 고유 계좌번호 UNIQUE)

개인별 근무조 관리
	근태관리 > 근무스케줄관리 > 조직별근무조관리_NEW  

SELECT A.ORG_CD
     , A.WORK_ORG_CD AS CODE
     , A.WORK_ORG_NM AS CODE_NM
FROM TTIM110 A
WHERE 1 = 1
  AND A.ENTER_CD = TRIM('KS')
  AND A.ORG_CD 	 = TRIM('KS_CJJKH')
  AND REPLACE( '2024-04-12','-','' ) BETWEEN A.SDATE AND NVL(A.EDATE,'99991231')
ORDER BY A.WORK_ORG_NM DESC;
---------------------------------------------------------------------
<발령>
THRM191
	THRM191	개인발령사항	ORD_TYPE_CD	발령형태(TSYS011)
	THRM191	개인발령사항	ORD_DETAIL_CD	발령종류(TSYS013)

TSYS011
TSYS013
	LAT_UPL_KOR
			'LAT_UPL_KOR29','LAT_UPL_KOR30','LAT_UPL_KOR48', 'LAT_UPL_KOR49'
	발령코드
	TSYS011 ORD_TYPE_CD, ORD_TYPE_NM
		TSYS013 ORD_TYPE_CD, ORD_DETAIL_CD, ORD_DETAIL_NM
	SELECT * FROM TSYS011 WHERE ORD_TYPE_CD='LAT_UPL_KOR';
	SELECT * FROM TSYS013 WHERE ORD_TYPE_CD='LAT_UPL_KOR' AND ENTER_CD='KS' ORDER BY ORD_DETAIL_CD ;


-----------------------------------------------------------
<근태담당자만> transportationCostTar.jsp
	  if(ssnGrpCdBenManager.indexOf(grpCd) !== -1) {
		  payInfoEditYn = 1;
		  payInfoEdit2Yn = 1;
	  } else if (ssnGrpCdDepAffairs.indexOf(grpCd) !== -1){
		  payInfoEdit2Yn = 1;
		  $(".depAffYn").hide();
		  $(".benBtn").show(); // 근태담당자 입력 가능하도록 버튼 show
	  }


---------------------------------------
<은행  계좌번호>TCPN180
					     , C.BANK_CD
                         , CRYPTIT.DECRYPT(C.ACCOUNT_NO, C.ENTER_CD) AS ACC_NO
                         , C.ACC_NAME

                       AND A.ENTER_CD = C.ENTER_CD(+)
                       AND A.SABUN    = C.SABUN(+)
                       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.SDATE(+) AND NVL(C.EDATE(+), '99991231')
                       AND C.ACCOUNT_TYPE(+) = '01'

		//공통코드 한번에 조회
		var grpCds = "'H30001'";
		var codeLists = convCodes(ajaxCall("${ctx}/CommonCode.do?cmd=commonCodeLists","grpCd="+grpCds,false).codeList, "전체");
		sheet1.SetColProperty("bankCd", {ComboText:"|"+codeLists["H30001"][0], ComboCode:"|"+codeLists["H30001"][1]} ); //은행
---------------------------------------------------------
sheet1.GetCellValue
(참고)for(var i = sheet1.HeaderRows(); i<sheet1.RowCount()+sheet1.HeaderRows()+sheet1.FilteredRowCount(); i++){
   for(var i = sheet1.HeaderRows(); i<sheet1.RowCount()+sheet1.HeaderRows(); i++){
    if(sheet1.GetCellValue(i, "payYm") == ""){
     sheet1.SetCellValue(i, "payYm", ym); //일괄적용
    }
   }
	 }catch(e){
		console.error(e);
	 }
 }
------------------------------------------------------------
<결재상태 신청상태>
//공통코드 한번에 조회
let grpCds = "'R10010','B56030','B56020','B20001', 'B56040', 'H30001'";
let codeLists = convCodes(ajaxCall("${ctx}/CommonCode.do?cmd=commonCodeLists&useYn=Y","grpCd="+grpCds,false).codeList, "전체");
sheet1.SetColProperty("applStatusCd",  {ComboText:"|"+codeLists["R10010"][0], ComboCode:"|"+codeLists["R10010"][1]} ); //신청상태
$("#searchApplStatusCd").html(codeLists["R10010"][2]);  //신청상태
----------------------------------------------------------------------
<임시저장 포함 ksonly>
장기근속여행,
학자금, 
자녀보육비, 
항공권, 
자가보험, 
결혼여행보조금
                    LEFT OUTER JOIN THRI103 B ON
                        A.ENTER_CD   = B.ENTER_CD
                        AND A.APPL_SEQ   = B.APPL_SEQ
#if(!$ssnEnterCd.equals("KS"))
                        AND B.APPL_STATUS_CD != '11'
#end
-----------------------------------------------------------------------

[법인추가 - 사용자 추가]

KT 고정 IP정보
권창식 10.22.11.65
황선미 10.22.10.141
문용환 10.22.11.180

토파스 IP 주소 회신드립니다.
김용근 10.24.1.59
김준희 10.24.1.37
이지원 10.24.1.73

10.22.11.65

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.65','65', '20240719','KT 권창식 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.65','65', '20240719','KT 권창식 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.65','65', '20240719','KT 권창식 로컬',SYSDATE,'test128','L');

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.10.141','141', '20240719','KT 황선미 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.10.141','141', '20240719','KT 황선미 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.10.141','141', '20240719','KT 황선미 로컬',SYSDATE,'test128','L');

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.180','180', '20240719','KT 문용한 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.180','180', '20240719','KT 문용한 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.22.11.180','180', '20240719','KT 문용한 로컬',SYSDATE,'test128','L');

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.159','159', '20240719','TP 김용근 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.159','159', '20240719','TP 김용근 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.159','159', '20240719','TP 김용근 로컬',SYSDATE,'test128','L');

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.37','37', '20240719','TP 김준희 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.37','37', '20240719','TP 김준희 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.37','37', '20240719','TP 김준희 로컬',SYSDATE,'test128','L');

insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.73','73', '20240719','TP 이지원 로컬',SYSDATE,'test128','A');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.73','73', '20240719','TP 이지원 로컬',SYSDATE,'test128','C');
insert into torg905 (enter_cd,ip_address,ip_address_end,sdate,memo,chkdate,cHkid,gubun) values('KT','10.24.1.73','73', '20240719','TP 이지원 로컬',SYSDATE,'test128','L');

<<isExistUser();>>
id/pwd 로그인
(찾기, isExistUser(), breakpoint)
>isExistUser();
>luid="test128";
>lpwd="hanjinGroup@0621";

<< 인사관리 > 발령정보 > 기본설정 > 발령코드관리  >>
발령상세코드관리
No	삭제	상태	 발령코드	 발령상세코드	 발령상세	휴직근속 포함여부	복리후생비지원여부			순서	사용여부
1	 	 	LAT_UPL_KOR	LAT_UPL_KOR01	Military	 	 				 	 	 
2	 	 	LAT_UPL_KOR	LAT_UPL_KOR52	의병연장	 	 				 	 	 
3	 	 	LAT_UPL_KOR	LAT_UPL_KOR03	Illegality	 	 				 	 	 
4	 	 	LAT_UPL_KOR	LAT_UPL_KOR04	Study	 	 				 	 	 
5	 	 	LAT_UPL_KOR	LAT_UPL_KOR05	Childbirth	 	 				 	 	 
6	 	 	LAT_UPL_KOR	LAT_UPL_KOR06	Pregnancy	 	 				 	 	 
7	 	 	LAT_UPL_KOR	LAT_UPL_KOR07	Subfertility Treatment	 	 				 	 	 
8	 	 	LAT_UPL_KOR	LAT_UPL_KOR08	Maternity	 	 				 	 	 
9	 	 	LAT_UPL_KOR	LAT_UPL_KOR09	Child Care	 	 				 	 	 
10	 	 	LAT_UPL_KOR	LAT_UPL_KOR10	Family Care	 	 				 	 
--------------------------------------------------------------------------------------------
<apigee basic auth>
### HanPAWSs API Basic Auth, Apigee ###
#apigee.api.user = hanpaws_apigee_dev
#apigee.api.pass = $2a$10$UKFOFDOwk/rZasjcw1WOwODzWkaFTdu.yMUrSN26wrrAv4vnc79Yy
apigee.api.user = hanpaws_apigee_prd
apigee.api.pass = $2a$10$emiD.vRh5sAItBhH7h7kD.M9pCDjGs6LHVuz7JXmtCdhvpCxjqnie

        //String rawPassword = "+YN)NggudI^BsXqr"; //hanpaws_apigee_dev
        String rawPassword = "mTWvLqzXkdwp4fq3"; //hanpaws_apigee_prd
        //$2a$10$UKFOFDOwk/rZasjcw1WOwODzWkaFTdu.yMUrSN26wrrAv4vnc79Yy (hanpaws_apigee_dev)
        //$2a$10$emiD.vRh5sAItBhH7h7kD.M9pCDjGs6LHVuz7JXmtCdhvpCxjqnie (hanpaws_apigee_prd)

<<apigee call history>>
INT_TSYS_986_LOG
select * 
From INT_TSYS994
where detail_msg like '%0900696%'
order by chkdate desc;

select * 
From INT_TSYS986 
where intf_nm='개인발령사항' and json_data like '%0900696%'
order by chkdate desc;


SELECT
a.chkdate,substr(a.detail_msg,1,50) dmsg,
A.INTF_NM||CASE
  WHEN INSTR(A.TARGET_URL, 'Company_ID=') > 0
  THEN '('||SUBSTR(A.TARGET_URL, INSTR(A.TARGET_URL, 'Company_ID=')+11,2)||')'
  ELSE ''
END AS INTF_NM,
A.INTF_CD,A.HTTP_STATUS_CODE,A.API,A.REQUEST_IP,A.TARGET_URL,
A.HTTP_HEADERS,A.HTTP_STATUS_CODE_VALUE,A.DETAIL_MSG,A.CHKDATE,A.CHKID,
TO_CHAR(A.CHKDATE, 'YY/MM/DD HH24:Mi:SS') AS CHKDATE_C
  FROM INT_TSYS994 A
 WHERE 1 = 1
   AND TO_CHAR(A.CHKDATE,'YYYYMMDD') BETWEEN NVL( REPLACE('2024-09-13','-',''), '00000000' ) AND NVL( REPLACE('2024-09-13','-',''), '99991231' )
and request_ip!='10.23.14.145'
and intf_nm not in ('생수불출내역','한진정보통신 타각','한진정보통신 출장 교육')
and INSTR(A.TARGET_URL, 'Company_ID=') > 0
and instr(a.target_url,'TP')>0
 ORDER BY A.CHKDATE DESC;
 
--select eeid,company_id 
select distinct eeid,company_id,l_last_name,l_first_name,sup_org_id
--select *
from int_thrm100
where company_id='TP'
and 
(eeid like '%00090921'
or
eeid like '%24901096'
or
eeid like '%00000027'
)
;
---------------------------------------------------------------------------------
<<SSO Email>>
TSYS305 EMAIL (SABUN,ID,PASSWORD,EMAIL,LOGIN_FAIL_CNT)

비밀번호 만료
UPDATE TSYS305
SET PSWD_CHG_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
WHERE SABUN='test128'
AND PSWD_CHG_YMD = '20241216';
---------------------------------------------------------------------------------
<조건검색>THRI201, THRI203, THRI205
SELECT A.SEARCH_TYPE
    , A.CONDITION_DESC
    , A.SQL_SYNTAX
    , A.ADMIN_SQL_SYNTAX
    , C.VIEW_NM
FROM THRI201 A, THRI205 C
WHERE A.ENTER_CD   	= 'HX'
    AND A.SEARCH_SEQ 	= '99000028'
    AND A.VIEW_CD		= C.VIEW_CD(+)
    and instr(a.admin_sql_syntax,'TORG103 SS')>0;

select admin_sql_syntax From thri201
where instr(admin_sql_syntax,'AND B.EMP_YMD <= TO_CHAR (SYSDATE')>0;

select * From thri203
where instr(sql_syntax,'AND TO_CHAR (SYSDATE, ''YYYYMMDD'') BETWEEN C.SDATE') >0;
-----------------------------------------------------------------------------------------
<JOIN, ROW_NUMBER>
JOIN 방법: 서브쿼리 대신 JOIN을 사용하면 더 효율적으로 최대값을 찾을 수 있습니다.
ROW_NUMBER() 윈도우 함수: ROW_NUMBER()를 사용하여 각 key에 대해 최대값을 선택하는 방법도 매우 효율적입니다.
대개는 JOIN 방식이 직관적이고 성능이 뛰어나지만, 데이터량이 많을 때는 ROW_NUMBER() 방식이 더욱 효과적일 수 있습니다.
SELECT A.col
FROM test A
JOIN (
    SELECT key, MAX(col) AS max_col
    FROM test
    GROUP BY key
) B ON A.key = B.key AND A.col = B.max_col;

SELECT col
FROM (
    SELECT A.col,
           ROW_NUMBER() OVER (PARTITION BY A.key ORDER BY A.col DESC) AS rn
    FROM test A
) B
WHERE B.rn = 1;
-----------------------------------------------------------------------------------------------------
DECLARE
    V_CNT number(2) := 0;
    V_TEXT VARCHAR2(4000) :='';
    
    CURSOR C1 IS SELECT VIEW_NAME FROM USER_VIEWS;
BEGIN
    FOR C1_REC IN C1 LOOP
        BEGIN
            SELECT count(*) INTO V_CNT
            FROM DUAL
            WHERE INSTR(DBMS_METADATA.GET_DDL('VIEW', C1_REC.VIEW_NAME), 'AND TO_CHAR (SYSDATE, ''YYYYMMDD'') BETWEEN C.SDATE') > 0;
            
            IF V_CNT > 0 THEN
                DBMS_OUTPUT.PUT_LINE(DBMS_METADATA.GET_DDL('VIEW', C1_REC.VIEW_NAME));
            END IF;
        
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('No DDL found for VIEW: ' || C1_REC.VIEW_NAME);
        END;
    END LOOP;
END;
----------------------------------------------------------------------------------------------------------------
<임원여부>
            lv_jikgub_cd := F_COM_GET_JIKGUB_CD(P_ENTER_CD, P_SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'));
            lv_immonYn := F_COM_GET_GRCODE_MAP_VAL(P_ENTER_CD, 'A01','H20010', lv_jikgub_cd, TO_CHAR(SYSDATE,'YYYYMMDD'));
------------------------------------------------------------------------------------------------------------------
<한진칼 부서별월근태현황, 타임카드 올려도 동그라미 체크 안된다 >
'20000175' , '1900801'
--이철주 1900801
--황성진 20000175
--필요작업 : TimeCard업로드, 개인근무스케줄생성에서  2.근무이력 갱신
--cf. 일근무관리같은데서 안보일 때 : 1.근무스케줄생성
---------------------------------------------------------------------------------------------------------------
<급여재계산>
**********************
복리후생(마감) -> 급여 
복리후생(신협적립금) <- 급여 (마감)

************************
고용보험
HT	202411001	2231029	1030	1	M	1280	1280	N	2024/12/10 09:18:54	test128
SELECT * fROM TCPN205
WHERE ENTER_CD='HT' AND PAY_ACTION_CD='202411001' AND SABUN='2231029' AND ELEMENT_cd in ('1030','2200');

급여
급여일자관리
TCPN441,
TCPN996,
TCPN997 *
TRG_CPN_201 *
전월소급대상 급여계산일자 등록
상여지급율 등록,
복리후생마감(주사업장만),
급여명세서관리(TCPN996,TCPN997) 자료생성 및 삭제

--------------------------------------------------------

--1) ■■■■■■■■■ [ queryId :savePayCalcReCre ] ■■■■■■■■■
--2) ■■■■■■■■■ [ queryId :PayCalcReCreP_CPN_RETRY_PAY_MAIN ] ■■■■■■■■■
-----CALL P_CPN_RETRY_PAY_MAIN('<OUT>','<OUT>','HT','202411001','',NULL,'test128')
----------P_CPN_CAL_PAY_MAIN (
----------------P_CPN_CAL_PAY(      /* 급여계산(계산항목항목링크유형별로 작업)

<급여> - <복리후생>
복리후생마감관리
복리후생담당자마감


급여계산 : 복리후생 마감 시 생성된 tcpn998? 이용한다
급여[마감] : p_cpn_cal_close : 복리후생(신협) 자료 생성해준다
복리후생[마감] : 급여 cpn에 넣어준다
	p_ben_pay_data_create
	p_ben_pay_data_close 


P_BEN_PAY_DATA_CRE_LIST
	TBEN777
	TBEN997 *
급여에서 TBEN997을 쓰나?

P_CPN_CAL_PAYMENT_INS
/*           -- 채권압류금 계산
/*           -- 공제총액,실지급액을 구한다
/*                 미공제내역 발생 여부 체크및 내역 등록
/*              고용,건강보험,국민연금,공제총액,실지급액을 월급여실적에 등록 
/*           -- 임금유형별누적사항 등록   
	
	TCPN303

--개인별급여내역(관리자)
TCPN205 , (REPORT_NM)TCPN201, TCPN011
■■■■■■■■■ [ queryId :getPerPayPartiAdminStaList ] ■■■■■■■■■
SELECT 'DEDUCT' AS GUBUN
                         , REPORT_NM
                         , TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
                     FROM (
                            SELECT B.REPORT_NM2      AS REPORT_NM
                                  ,MIN(B.GRP_SORT)   AS PRIORITY
                                  ,SUM(A.BASIC_MON)  AS BASIC_MON
                                  ,SUM(A.RESULT_MON) AS RESULT_MON
                              FROM TCPN205 A
                                  ,(
                                     SELECT Y.ENTER_CD
                                           ,Y.ELEMENT_CD
                                           ,Y.GRP_SORT
                                           ,Y.REPORT_NM AS REPORT_NM2
                                       FROM TCPN201 X, TCPN011 Y
                                      WHERE X.ENTER_CD = Y.ENTER_CD
                                        AND X.ENTER_CD = 'HT'
                                        AND X.PAY_ACTION_CD = '202411001'
                                        AND Y.ELEMENT_TYPE  = 'D'
                                        AND (Y.DEDUCTION_TYPE IS NULL OR Y.DEDUCTION_TYPE <> 'ER_CAG')
                                        AND Y.SDATE = (SELECT MAX(Z.SDATE) FROM TCPN011 Z WHERE Z.ENTER_CD = Y.ENTER_CD AND Z.ELEMENT_CD = Y.ELEMENT_CD AND X.PAYMENT_YMD BETWEEN Z.SDATE AND NVL(Z.EDATE, '99991231'))
                                     ) B
                            WHERE A.ENTER_CD      = 'HT'
                              AND A.PAY_ACTION_CD = '202411001'
                              AND A.SABUN         = '2231029'
                              AND (A.TOT_MON_YN IS NULL OR A.TOT_MON_YN = 'N')
                              AND A.ENTER_CD      = B.ENTER_CD
                              AND A.ELEMENT_CD    = B.ELEMENT_CD
                            GROUP BY	B.REPORT_NM2
                            ORDER BY	MIN(B.GRP_SORT)
                          );


DEDUCT	국민연금	158,440
DEDUCT	건강보험	143,360
DEDUCT	고용보험	1,280
DEDUCT	소득세	124,770
DEDUCT	지방소득세	12,470
DEDUCT	개인연금	48,000
DEDUCT	생수택배공제	8,400

ELEMENT_CD REPORT_NM
HT	D115	1130	개인연금
HT	1020	20	건강보험
HT	2110	33	건강보험정산분
HT	2130	32	건강보험정산분
HT	1030	40	고용보험
HT	2200	460	고용보험정산분
HT	1000	10	국민연금
HT	2010	430	국민연금정산분
HT	D900	1910	급여조정
HT	D145	1190	기타공제
HT	D150	1200	기타공제
HT	D880	1908	기타공제
HT	D930	1916	기타공제3
HT	D140	1180	나누미공제
HT	D160	1600	노조비
HT	D161	1610	노조비
HT	D120	1140	단체상해보험공제
HT	D125	1150	생수택배공제
HT	1070	50	소득세
HT	D130	1160	신협대출원금
HT	D135	1170	신협대출이자
HT	D100	1110	신협출자금
HT	D105	1120	신협출자금
HT	D110	1125	신협출자금(소급)
HT	D107	1122	신협출자금(소급)
HT	D050	1100	압류금
HT	D240	1900	연말정산수정분
HT	D250	1902	연말정산수정분(지방소득세)
HT	3200	490	연말정산차감농특세
HT	3000	470	연말정산차감소득세
HT	3100	480	연말정산차감주민세
HT	1010	30	장기요양보험
HT	2120	31	장기요양보험정산분
HT	D142	1185	주차료공제
HT	1080	60	지방소득세
HT	D190	1912	착오과세
HT	D200	1914	착오비과세
HT	D840	1904	퇴직담보대출원금
HT	D850	1906	퇴직담보대출이자
HT	D270	1918	평창보조공제
HT	D155	1205	학자금원천공제
----------------------------
<급여, 복리후생 마감>
P_CPN_BEN_EMP_INS
TBEN(991,005,981,777) => TCPN (205,206)

205 개인별항목계산결과
206 개인별항목계산결과(Temp)


--------------
급여-복리후생 : 고용보험
TBEN303 - 고용보험 기본데이터
마감 : TBEN777

[국민연금,건강보험] 연계방식 조회
SELECT ENTER_CD
        , GLOBAL_VALUE_CD
        , SDATE
        , GLOBAL_VALUE_NM
        , DESCRIPTION
        , DATA_TYPE
        , GLOBAL_VALUE
        , EDATE
        , CHKDATE
        , CHKID
  FROM  TCPN081 
  WHERE global_value_CD='BEN_CAL_TYPE';

**********************************************************************
조건검색
	1) 공통쿼리처럼 사용
		예) 근태관리 > 휴가관리 > 휴가생성/확정  : "대상자" 리스트 박스
	2) 화면구성
		예) 복리후생 > 사회보험 > 국민연금 > 국민연금기본사항현황  


************************************************************************
시퀀스 sequence
		<query id="getSequence">
			<statement>
				<![CDATA[
					SELECT F_COM_GET_SEQ(:seqId) AS GET_SEQ FROM DUAL
				]]>
-----------------------------------------------------------------------------

TBEN777
	BEN_GUBUN B10230
10	국민연금
15	건강보험
20	고용보험
51	학자금
52	경조금
53	항공할인
54	자녀(위탁)보육비
55	상해보험
56	장기근속여행비
57	장기근속포상비
58	개인연금
59	생수
61	리조트(콘도)
64	식권
66	취미반
68	주택자금이자보조비
69	파견보조비
70	의료비
72	사내강사료
73	자격취득지원
74	근로복지기금대출
75	신협적립금
76	신협대출
77	PM수당
85	식비(현금중식대)
88	이동전화보조비
