(7/17 Thursday) 
--근태코드 : 근무/연차/반차...
--근무/연차/반차 : 시작시간~종료시간 (09:00~16:00, 08:30~17:30, ...)
    --연차일경우, 원래 근무시작시간~근무종료시간?


select a.table_name,a.comments,b.column_name,b.comments
from USER_TAB_COMMENTS a,USER_col_comments b
WHERE a.table_name=b.table_name
and a.table_name NOT like 'SYS%'
 and (a.comments like '%유연근무%' or b.comments like '%유연근무%');

SELECT * FROM TTIM131 WHERE ENTER_CD='HX' AND SABUN='09700062' ORDER BY APPL_sEQ DESC;
--HX	20250709000329	09700062	20250710	20250809	T010	25/07/09	09700062	99	
--FLEXIBLE_TYPE=T010, APPL_STATUS_CD='99'

SELECT * fROM TSYS005 WHERE GRCODE_CD='T20020' AND ENTER_CD='HX';

select * from TSYS920
where n_title like '%노무%';

SELECT F_TIM_GET_DAY_GNT_CD('HX','20240040','20250717') GNT_CD FROM DUAL;

--[1]근태코드
SELECT F_TIM_GET_DAY_GNT_CD('HX','09700062','20250717') GNT_CD FROM DUAL;
 
 --[2]in_hm, out_hm
select * From TTIM335;
select * from TTIM335 where enter_cd='HX' and sabun='09700062' and ymd= '20250617';
--[3] wrok_shm
select * From TTIM017 where enter_cd='HX'; 
select * from TTIM120_V where enter_cd='HX' and sabun='09700062' and ymd= '20250618';

SELECT * FROM TTIM301;--SABUN,S_YMD~E_YMD,GNT_CD
SELECT * FROM TTIM301 where enter_cd='HX' and sabun='09700062' and s_ymd>='20250601';--SABUN,S_YMD~E_YMD,GNT_CD



--[1]
       SELECT RANK() OVER (ORDER BY A.GNT_CD, A.YMD) AS NUM
            , A.GNT_CD
            , (SELECT GNT_NM FROM TTIM014 WHERE ENTER_CD = A.ENTER_CD AND GNT_CD = A.GNT_CD) AS GNT_NM
         FROM TTIM405 A , THRI103 B, TTIM301 C
        WHERE A.ENTER_CD = B.ENTER_CD
          AND A.APPL_SEQ = B.APPL_SEQ
          AND A.ENTER_CD = C.ENTER_CD
          AND A.APPL_SEQ = C.APPL_SEQ
          AND NVL(A.UPDATE_YN,'N') = 'N'
          AND B.APPL_STATUS_CD = '99'
          AND A.ENTER_CD = 'HX'
          AND A.SABUN    = '20240040'
          AND A.YMD      = '20250717'  ;
          
select A.* From TTIM335 A
WHERE 1=1
          AND A.ENTER_CD = 'HX'
          AND A.SABUN    = '20240040'
    AND A.YMD='20250717'
; --[2]in_hm, out_hm
select A.* From TTIM017 A 
WHERE 1=1
          AND A.ENTER_CD = 'HX'
          AND A.TIME_CD    = '10000'
    ; --[3] wrok_shm




          
SELECT * FROM TTIM405 
WHERE 1=1
AND ENTER_CD='HX' 
AND SABUN='20240040'
ORDER BY CHKDATE DESC
;--SABUN,YM,GNT_CD



SELECT * FROM TTIM301;--SABUN,S_YMD~E_YMD,GNT_CD

SELECT ENTER_CD,GNT_CD FROM TTIM014 WHERE GNT_NM LIKE '%반차';


          
          

SELECT
                    X.CODE
                    ,CASE WHEN LENGTH(X.CODE_NM) > 2 THEN SUBSTR(CODE_NM,0,2)||CHR(13)||CHR(10)||SUBSTR(CODE_NM,3) ELSE X.CODE_NM END AS CODE_NM
                    ,X.SAVE_NAME
                    ,X.SAVE_NAME_DISP
                    ,X.CD_TYPE
                    ,X.TYPE
                    ,X.FORMAT
                FROM(
                    SELECT A.WORK_CD AS CODE
                         , B.WORK_NM AS CODE_NM
                         , 'WORK_CD_' || ROW_NUMBER() over (ORDER BY A.SEQ) AS SAVE_NAME
                         , 'workCd' || ROW_NUMBER() over (ORDER BY A.SEQ) AS SAVE_NAME_DISP
                         , B.CD_TYPE
                         , F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD, 'T10030', B.CD_TYPE, 1) AS TYPE
                         , F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD, 'T10030', B.CD_TYPE, 2) AS FORMAT
                    FROM TTIM355 A, TTIM015 B
                    WHERE 1 = 1
                      AND A.ENTER_CD = B.ENTER_CD
                      AND A.WORK_CD = B.WORK_CD
                      AND B.ENTER_CD = 'HX'
                      AND A.WORK_GUBUN_CD = 'A'
                ) X;
                
				SELECT A.TIME_CD AS CODE
				     , A.SHORT_TERM AS CODE_NM
				  FROM TTIM017 A
				 WHERE 1 = 1
				   AND A.ENTER_CD = 'HX'
				 ORDER BY SEQ;
                 
SELECT
                    X.CODE
                    ,CASE WHEN LENGTH(X.CODE_NM) > 2 THEN SUBSTR(CODE_NM,0,2)||CHR(13)||CHR(10)||SUBSTR(CODE_NM,3) ELSE X.CODE_NM END AS CODE_NM
                    ,X.SAVE_NAME
                    ,X.SAVE_NAME_DISP
                    ,X.CD_TYPE
                    ,X.TYPE
                    ,X.FORMAT
                FROM(
                    SELECT A.WORK_CD AS CODE
                         , B.WORK_NM AS CODE_NM
                         , 'WORK_CD_' || ROW_NUMBER() over (ORDER BY A.SEQ) AS SAVE_NAME
                         , 'workCd' || ROW_NUMBER() over (ORDER BY A.SEQ) AS SAVE_NAME_DISP
                         , B.CD_TYPE
                         , F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD, 'T10030', B.CD_TYPE, 1) AS TYPE
                         , F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD, 'T10030', B.CD_TYPE, 2) AS FORMAT
                    FROM TTIM355 A, TTIM015 B
                    WHERE 1 = 1
                      AND A.ENTER_CD = B.ENTER_CD
                      AND A.WORK_CD = B.WORK_CD
                      AND B.ENTER_CD = 'HX'
                      AND A.WORK_GUBUN_CD = 'A'
                ) X;
                
SELECT A.*

                      , NVL((CASE WHEN HOLIDAY_NM IS NOT NULL THEN HOLIDAY_NM WHEN A.WORK_YN = 'Y' THEN '휴일' ELSE HOLIDAY_NM END), '평일') AS DAY_DIV

                      , (CASE WHEN HOLIDAY_NM IS NOT NULL OR A.WORK_YN = 'Y' THEN '#ef519c' ELSE '' END) AS DAY_NM_FONT_COLOR
                      , (CASE WHEN HOLIDAY_NM IS NOT NULL OR A.WORK_YN = 'Y' THEN '#ef519c' ELSE '' END) AS DAY_DIV_FONT_COLOR
                      , (CASE WHEN HOLIDAY_NM IS NOT NULL OR A.WORK_YN = 'Y' THEN '#ef519c' ELSE '' END) AS YMD_FONT_COLOR

                      , (CASE WHEN HOLIDAY_NM IS NULL AND A.WORK_YN = 'N' THEN 'N' ELSE 'Y' END) AS HOLIDAY_DIV

                      , (CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') > A.YMD THEN (CASE WHEN A.WORK_YN = 'N' AND (A.IN_HM IS NULL OR A.OUT_HM IS NULL) 
                                                                                  THEN (CASE WHEN A.GNT_CD = '결근' THEN 'X'
                                                                                             WHEN A.GNT_CD IS NOT NULL THEN 'O' 
                                                                                             ELSE 'X' END
                                                                                        ) 
                                                                                   ELSE 'O' END
                                                                             )
                              ELSE NULL END) AS WORK_FLAG
                  FROM (
			                SELECT TO_CHAR(TO_DATE(A.YMD, 'YYYYMMDD'), 'YYYY-MM-DD') || ' (' || A.DAY_NM  || ')' AS V_YMD
			                     , A.YMD
			                     , C.TIME_CD
			                     , C.WORK_ORG_CD
			                     , C.WORK_YN
			                     , F_TIM_GET_DAY_GNT_NM(A.ENTER_CD, A.SABUN, A.YMD) AS GNT_CD
			                     , B.IN_HM
			                     , B.OUT_HM

								 , (CASE WHEN B.IN_HM IS NOT NULL AND B.OUT_HM IS NOT NULL THEN F_TIM_GET_WORK_TERM_TIME(A.ENTER_CD,A.SABUN,A.YMD,B.IN_HM,B.OUT_HM) ELSE NULL END) AS WORK_TIME
				                 , F_TIM_WORK_HM_TEXT(A.ENTER_CD, A.SABUN, A.YMD) AS REAL_WORK_TIME

			                     , D.WORKDAY_STD
			                     , NVL(C.SHM, CASE WHEN C.WORK_YN = 'N' THEN D.WORK_SHM ELSE '' END) AS WORK_SHM
			                     , NVL(C.EHM, CASE WHEN C.WORK_YN = 'N' THEN D.WORK_EHM ELSE '' END) AS WORK_EHM
			                     --, E.BUSINESS_PLACE_CD
			                     --, ( SELECT HOLIDAY_NM FROM TTIM001 WHERE ENTER_CD = A.ENTER_CD AND YY || MM || DD = A.YMD AND BUSINESS_PLACE_CD = E.BUSINESS_PLACE_CD) AS HOLIDAY_NM
			                     , F_COM_GET_BP_CD(C.ENTER_CD, C.SABUN, C.YMD) AS BUSINESS_PLACE_CD
			                     , ( SELECT HOLIDAY_NM FROM TTIM001 WHERE ENTER_CD = A.ENTER_CD AND YY || MM || DD = A.YMD AND BUSINESS_PLACE_CD = F_COM_GET_BP_CD(C.ENTER_CD, C.SABUN, C.YMD)) AS HOLIDAY_NM
			                     , A.DAY_NM AS TEMP_DAY_NM

			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0020') AS "WORK_CD_1"
			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0040') AS "WORK_CD_2"
			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0045') AS "WORK_CD_3"
			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0070') AS "WORK_CD_4"
			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0090') AS "WORK_CD_5"
			                     , (SELECT LPAD(NVL(X.WORK_HH,0),2,0)||':'||LPAD(NVL(X.WORK_MM,0),2,0) 
			                          FROM TTIM337 X 
			                         WHERE X.ENTER_CD = B.ENTER_CD 
			                           AND X.YMD      = B.YMD 
			                           AND X.SABUN    = B.SABUN 
			                           AND ( NVL(X.WORK_HH,0)> 0 OR NVL(X.WORK_MM,0)> 0 ) 
			                           AND X.WORK_CD  = '0110') AS "WORK_CD_6"
			                FROM (
			                		SELECT A1.ENTER_CD
			                             , A1.SABUN
			                             , A1.NAME
			                             , A2.SUN_DATE AS YMD
			                             , A2.DAY_NM
			                             , B.STATUS_CD
			                             , B.JIKGUB_NM
			                             , B.JIKWEE_NM
			                             , B.JIKCHAK_NM
			                             , B.MANAGE_NM
			                             , B.SDATE
			                             , B.ORG_CD
			                             , B.WORK_TYPE_NM
			                             , B.PAY_TYPE_NM
			                          FROM THRM100 A1, THRM151 B, TSYS007 A2
			                         WHERE A2.SUN_DATE BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','')
			                           AND A1.ENTER_CD = TRIM( 'HX' )
			                           AND A1.SABUN    = TRIM( '20120026' )
			                           AND A1.ENTER_CD = B.ENTER_CD
			                           AND A1.SABUN    = B.SABUN
			                           AND A2.SUN_DATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')

			                     ) A
			                     , TTIM335 B, TTIM120_V C, TTIM017 D
			                     --, BP_V E
			                 WHERE A.ENTER_CD = B.ENTER_CD(+)
			                   AND A.SABUN    = B.SABUN(+)
			                   AND A.YMD      = B.YMD(+)
			                   AND A.ENTER_CD = C.ENTER_CD(+)
			                   AND A.YMD      = C.YMD(+)
			                   AND A.SABUN    = C.SABUN(+)
			                   AND C.ENTER_CD = D.ENTER_CD
			                   AND C.TIME_CD  = D.TIME_CD


			                  -- AND A.ENTER_CD = E.ENTER_CD (+)
			                  -- AND A.SABUN    = E.SABUN    (+)
			                  -- AND A.YMD BETWEEN E.SDATE(+) AND NVL(E.EDATE(+), '99991231')
                   ) A
				ORDER BY A.YMD;


WITH TMP AS (
							SELECT A.ENTER_CD, A.YMD, A.SABUN, A.WORK_GRP_CD, A.WORK_ORG_CD
							     , NVL(B.WORK_HH_A, 0) AS WORK_HH_A
							     , NVL(B.WORK_HH_B, 0) AS WORK_HH_B
							     , NVL(B.WORK_MM_A, 0) AS WORK_MM_A
							     , NVL(B.WORK_MM_B, 0) AS WORK_MM_B
							     , ROW_NUMBER() OVER(ORDER BY A.YMD) AS RN
                                 , D.WEEK_START
                                 , D.WEEK_END
                                 , D.WEEK_CNT
                                 , D.RNUM
                                 , A.PLAN_WORK_YN
							FROM TTIM120_V A
							   , ( SELECT X.ENTER_CD, X.YMD, X.SABUN
							           , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_HH, 0)),0) AS WORK_HH_A
							           , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_HH)),0) AS WORK_HH_B
							           , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_MM, 0)),0) AS WORK_MM_A
							           , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_MM)),0) AS WORK_MM_B
							         FROM TTIM337 X, TTIM015 Y
							        WHERE X.ENTER_CD = TRIM('HX')
							          AND X.SABUN    = TRIM( '20120026' )
							          AND X.YMD BETWEEN TO_CHAR(TO_DATE(REPLACE('20250713','-',''),'YYYYMMDD')-7,'YYYYMMDD') AND TO_CHAR(TO_DATE(REPLACE('20250719','-',''),'YYYYMMDD')+7,'YYYYMMDD')
							          AND X.ENTER_CD = Y.ENTER_CD
							          AND X.WORK_CD  = Y.WORK_CD
							          AND Y.DAY_TYPE IN ('101', '105' ) --  정규근무(101),야간근무(103),연장근무(105)--휴일근무(201),휴일야간근무(203),휴일연장근무(205)
							        GROUP BY X.ENTER_CD, X.YMD, X.SABUN
							     ) B      
                                , (
                                      SELECT TO_CHAR(WEEK_START, 'YYYYMMDD') WEEK_START
                                           , TO_CHAR(WEEK_END, 'YYYYMMDD') WEEK_END
                                           , ROW_NUMBER()OVER(ORDER BY WEEK_START) AS RNUM
                                           , SUM( CASE WHEN TO_CHAR(WEEK_START, 'YYYYMMDD') BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','')
                                                        AND TO_CHAR(WEEK_END, 'YYYYMMDD') BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','') THEN 1 ELSE 0 END) OVER() AS WEEK_CNT
                                        FROM (
                                               SELECT START_DT AS WEEK_START
                                                    , END_DT AS WEEK_END
                                                 FROM ( SELECT F_TIM_GET_WEEK_START('HX',REPLACE('20250713','-','')) AS START_DT
                                                             , TO_DATE(TRIM(REPLACE('20250719','-','')), 'YYYYMMDD') END_DT
                                                          FROM DUAL  
                                                       )
                                               CONNECT BY LEVEL < END_DT - START_DT
                                              )
                                       WHERE 1=1
                                       GROUP BY WEEK_START, WEEK_END

                                   ) D          
							WHERE A.ENTER_CD  = TRIM('HX')
							  AND A.SABUN 	  = TRIM( '20120026' )
							  AND A.YMD BETWEEN D.WEEK_START AND D.WEEK_END
							  --AND A.YMD BETWEEN REPLACE(:searchSymd,'-','') AND REPLACE(:searchEymd,'-','')
							  AND A.ENTER_CD    = B.ENTER_CD(+)
							  AND A.SABUN       = B.SABUN(+) 
							  AND A.YMD         = B.YMD(+)

				)
				SELECT GUBUN, SDATE, EDATE
                     , F_TIM_FMT_TIME(TRUNC(WORK_HOUR), TRUNC(( WORK_HOUR - TRUNC(WORK_HOUR)) * 60)) AS  WORK_HOUR
                     , F_TIM_FMT_TIME(TRUNC(OT_HOUR), TRUNC(( OT_HOUR - TRUNC(OT_HOUR)) * 60)) AS  OT_HOUR
   					 , '#fdf0f5' AS WORK_HOUR_BACK_COLOR
   					 , '#fdf0f5' AS OT_HOUR_BACK_COLOR
				FROM (						
						SELECT GUBUN, SDATE, EDATE
						     , CASE WHEN INSTR(GUBUN, '일 평균') > 0 THEN NVL( (WORK_HH_A + (WORK_MM_A/60)) / DECODE(WORK_CNT, 0, NULL, WORK_CNT), 0 )
                                    WHEN INSTR(GUBUN, '주 평균') > 0 THEN NVL( (WORK_HH_A + (WORK_MM_A/60)) / DECODE(WEEK_CNT, 0, NULL, WEEK_CNT), 0 )
                                    ELSE (WORK_HH_A + (WORK_MM_A/60)) END AS WORK_HOUR

						     , CASE WHEN INSTR(GUBUN, '일 평균') > 0  THEN NVL( (WORK_HH_B + (WORK_MM_B/60)) / DECODE(WORK_ALL_CNT, 0, NULL, WORK_ALL_CNT), 0 )
                                    WHEN INSTR(GUBUN, '주 평균') > 0  THEN NVL( (WORK_HH_B + (WORK_MM_B/60)) / DECODE(WEEK_CNT, 0, NULL, WEEK_CNT), 0 )
                                    ELSE (WORK_HH_B + (WORK_MM_B/60)) END AS OT_HOUR

						  FROM (
								    SELECT ROW_NUMBER() OVER(ORDER BY MIN(YMD)) || '주차' AS GUBUN
								         , MIN(WEEK_START) AS SDATE
								         , MAX(WEEK_END) AS EDATE
								         , SUM(WORK_HH_A) AS WORK_HH_A
								         , SUM(WORK_HH_B) AS WORK_HH_B
								         , SUM(WORK_MM_A) AS WORK_MM_A
								         , SUM(WORK_MM_B) AS WORK_MM_B
                                         , SUM( DECODE(PLAN_WORK_YN, 'N', 1, 0) ) AS WORK_CNT
                                         , SUM( 1 ) AS WORK_ALL_CNT
                                         , MAX(WEEK_CNT) AS WEEK_CNT
								      FROM TMP
								     GROUP BY RNUM
								     UNION ALL
								    SELECT '단위기간' AS GUBUN
								         , MIN(WEEK_START) AS SDATE
								         , MAX(WEEK_END) AS EDATE
								         , SUM(WORK_HH_A) AS WORK_HH_A
								         , SUM(WORK_HH_B) AS WORK_HH_B
								         , SUM(WORK_MM_A) AS WORK_MM_A
								         , SUM(WORK_MM_B) AS WORK_MM_B
                                         , SUM( DECODE(PLAN_WORK_YN, 'N', 1, 0) ) AS WORK_CNT
                                         , SUM( 1 ) AS WORK_ALL_CNT
                                         , MAX(WEEK_CNT) AS WEEK_CNT
								     FROM TMP
							        WHERE YMD BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','')
                                    UNION ALL 
								    SELECT '일 평균' AS GUBUN
								         , MIN(WEEK_START) AS SDATE
								         , MAX(WEEK_END) AS EDATE
								         , SUM(WORK_HH_A) AS WORK_HH_A
								         , SUM(WORK_HH_B) AS WORK_HH_B
								         , SUM(WORK_MM_A) AS WORK_MM_A
								         , SUM(WORK_MM_B) AS WORK_MM_B
                                         , SUM( DECODE(PLAN_WORK_YN, 'N', 1, 0) ) AS WORK_CNT
                                         , SUM( 1 ) AS WORK_ALL_CNT
                                         , MAX(WEEK_CNT) AS WEEK_CNT
								     FROM TMP
							        WHERE YMD BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','')

                                    UNION ALL 
								    SELECT '주 평균' AS GUBUN
								         , MIN(WEEK_START) AS SDATE
								         , MAX(WEEK_END) AS EDATE
								         , SUM(WORK_HH_A) AS WORK_HH_A
								         , SUM(WORK_HH_B) AS WORK_HH_B
								         , SUM(WORK_MM_A) AS WORK_MM_A
								         , SUM(WORK_MM_B) AS WORK_MM_B
                                         , SUM( DECODE(PLAN_WORK_YN, 'N', 1, 0) ) AS WORK_CNT
                                         , SUM( 1 ) AS WORK_ALL_CNT
                                         , MAX(WEEK_CNT) AS WEEK_CNT
								     FROM TMP
							        WHERE YMD BETWEEN REPLACE('20250713','-','') AND REPLACE('20250719','-','')
							  )	     
					  )
;
---------------------------------------------------------------------------------------------------------------------------
(7/16 Wednesday)
[1] 특수교육비, 복리후생 작업/마감 하였을 때, 처리완료건은 결재 상태변경 못하게 해야함
[2] 생수 택배 신청 (정기 배송 해당 포인트만 신청 가능토록 막아주세요)

(7/15 Tue)
[1] [한국공항] 자가보험료 급여공제 오류? (이용일 1203390) [완료]
[2] [한진관광] (긴급) 생수택배신청 관련 - comment by 고영석B
[3] [한진정보통신] 특수교육비 - 운영 반영 20:00 (메뉴, 복리후생마감) [완료]


[1] CALL P_BEN_PREMIUM_PAY_CREATE('<OUT>','<OUT>','KS',REPLACE('2025-07', '-', ''), 'test128')




----------------------------------------------------------------------------------------------------------------
(07/10 Thr)
1. 토파스 복리후생 점검
2. 특수교육비 검수 - 작업/마감


(07/09)
db복구 END-POINT
	호스트이름 : 복구 DB 엔드포인트 : hgehr-dbdv-old.c3ztixxk7jbq.ap-northeast-2.rds.amazonaws.com
	PAWS_HG_PRD / PAWS_HG_PRD!2310
	서비스이름 : EHRDB

	
[1]연차촉진
	[추가]P_BEN_INSERT_NOTIFICATION =>vscode
	=> clone dev db에 생성 완료

[2]특수교육비
	[신규]CREATE TABLE TBEN771 => vscode
	[신규]CREATE TABLE TBEN770 => vscode
	[신규]CREATE INDEX IDX_TBEN770_ECD_SD_ED ON TBEN770 (ENTER_CD, SDATE, EDATE) ;
	[추가]F_BEN_APP_CHECK '102' 추가=>vscode
	[신규]F_BEN_SPE_EDU_CHECK=>vscode
	
TBEN770
ENTER_CD  NOT NULL VARCHAR2(10)   
SDATE     NOT NULL VARCHAR2(8)    
EDATE              VARCHAR2(8)    
MAX_M_AMT          NUMBER         
MAX_Q_AMT          NUMBER         
AGE_LMT            NUMBER         
WRK_D_LMT          NUMBER         
REMARKS            VARCHAR2(2000) 
CHKID              VARCHAR2(13)   
CHKDATE            DATE     
---------------





	

[3]한국공항 신협/ 신협 적립금 화면 수정요청 - 2차,신협적립금가입자
	< 수정전 > 설명 sample : 고형선( 사번 : 2300837 )
	출자금 : 358,000
	적립금 : 1,459,880
	<수정후>
	출자금 : 1,000
	적립금 : 1,816,880
	
[4]연차촉진 -보완요청
$("li[seq='15'] .nContent", $(".toastMsgList", "#panalAlertDiv")).slideDown();
15를 찾아라

    const targetText = "노무수령거부";

    // 1. 모든 li 요소를 순회합니다. (toastMsglist 안의 li)
    $('#toastMsgDiv .toastMsglist > li').each(function() {
        const $li = $(this);
        // 2. 현재 li 요소 안에서 .nTitle.readN 클래스를 가진 div를 찾습니다.
        const $nTitleDiv = $li.find('.nTitle');

        // 3. .nTitle.readN div의 텍스트 콘텐츠를 가져옵니다.
        //    trim()을 사용하여 앞뒤 공백을 제거합니다.
        //    .text()는 자식 요소의 텍스트까지 모두 포함합니다.
        //    여기서는 span.date의 텍스트도 포함되므로, includes()로 특정 문자열 포함 여부를 확인하는 것이 안전합니다.
        const fullTitleText = $nTitleDiv.text().trim();
		  console.log(fullTitleText);

        // 4. 가져온 텍스트가 목표 텍스트를 포함하는지 확인합니다.
        if (fullTitleText.includes(targetText)) {
            // 5. 목표 텍스트를 포함하는 li에서 .btn_show를 찾아 click 이벤트를 트리거합니다.
            $nTitleDiv.find('.btn_show').trigger('click');
            console.log(`"${targetText}" 텍스트를 가진 항목의 .btn_show가 트리거되었습니다.`);
            
            // 첫 번째 일치하는 항목을 찾으면 더 이상 순회할 필요가 없으므로 false를 반환하여 each를 중단합니다.
            return false; 
        }
    });
	 
    $('#toastMsgDiv .toastMsglist > li').each(function() {
        const $li = $(this);
        const $nTitleDiv = $li.find('.nTitle');
        const fullTitleText = $nTitleDiv.text().trim();
		  console.log(fullTitleText);
    });




-----------------------------------------------------------------------
(07/08)
/* 입력 벨리데이션은 상단에서 진행 때문에 시트 벨리데이션 필요없음 */
//if(!dupChk(sheet1,"inpGb|sdate|forCd|famCd|famNm|famYmd", true, true)){break;}
		  
let arrRows = sheet1.FindStatusRow("I|U").split(";");

arrRows.some(r =>{
	
});


메뉴명        테스트
가족사항신청
	1. 신규 입력 시 '저장' → '신청'이 한번에 되도록 변경 필요 
	=> dev
경조금신청        
	1. 경조신청 (과거 이관자료는 한웨이 한웨이문서자료가 없어 조회할 수 없습니다.)
	→ 경조금신청 (과거 이관자료는 한웨이 문서자료가 없어 조회할 수 없습니다.)
	=> 기 완료
	2. 회갑/칠순 자료를 입력할 수는 없는지?=>입력가능, 기 완료
	3. 신청일자 조회기간 빈칸으로 변경=>(dev)
	4. 신청서 팝업창에 경조금 지원 기준 하이퍼링크 넣을 수 있는지?
		→ 안되면 직접 내용 입력 or 구글 드라이브 파일 위치 안내
		=>dev
	5. 형제자매 선택 시 대상자 안나옴 => 기 완료
	6. 신청창 팝업 열릴 때, 상/하단 짤림=> 기 완료
	7. 배우자 휴가신청 여부 기능=> 기 완료
	8. 근태등록제외 : HANPAWS 근태기능 오픈시까지" => 기완료
개인연금내역        
	1. 신청 메뉴 필요 : 추가 납입, 본인 부담금 변경, 회사 부담금 중단 등
	추가납입 : 협의 필요
	본인 부담금 변경 : (dev)
	회사부담금 중단 : (기 완료), 기준관리

콘도사용신청        
	1. 특별요청사항 필수값 (optional로 변경 완료 1/23)

생수포인트 [기 완료]
	1. 생수 포인트 30포인트 생성 → 3포인트 생성
	2. 생수 포인트 사용이 반영되지 않음"
	생수이용내역        
		1. 생수인수증 출력 비밀번호
		2. 인출증 출력등록을 해도 잔여포인트가 차감되지 않음
		3. 인수증 정산등록을 해도 잔여포인트가 차감되지 않음
	생수택배신청        
		1. 생수 단기 신청 시 포인트가 차감되지 않음
		2. 생수 택배 신규 신청 시 상세주소가 초기화 되지 않음
		3. 일정기간 신청 막는 방법
		4. 주소변경, 종료 시 즉시 처리되지 않고, 담당자에게 접수되도록 변경 필요"
	
생활안정자금대출신청 [기 완료]
	1. 신청 팝업창 상/하단 짤림
	2. 상환기간 36개월 고정
	3. 유의사항 삭제"

자녀학자금신청 [개발 필요]
	1. 자녀학자금만 신청 가능, 본인학자금은?
	2. 지원 횟수 관리"
	자녀학자금내역        

항공권구매비용지원신청        
	1. 파일첨부 필수로 변경 필요 - (신청서, 첨부파일체크 필요, 한웨이 연동, 데이터 확인 필요)
	2. 팝업창 신청내역? 수량 안바뀜, 잔여 수량 체크 안됨 [기 완료]
	3. 신청 즉시 신청완료로 바뀜 [기 완료]
	항공권구매비용지원내역


<a href="$(".i-close").trigger("click");">test</a>
$("#sm4d_31").trigger("click");
$(".i-close").trigger("click");

/PsnlPnsnApr.do?cmd=viewPsnlPnsnApr	개인연금승인	ben/psnalPension/psnlPnsnApr/
/PsnlPnsnApp.do?cmd=viewPsnlPnsnApp	개인연금신청	ben/psnalPension/psnlPnsnApp/

/PsnlPnsnApr.do?cmd=viewPsnlPnsnApr	개인연금승인	ben/psnalPension/psnlPnsnApr/
/PsnlPnsnApp.do?cmd=viewPsnlPnsnApp	개인연금신청	ben/psnalPension/psnlPnsnApp/

/PsnlPnsnApp.do?cmd=viewPsnlPnsnApp

/psnlPnsnAppDet.do?cmd=viewPsnlPnsnAppDet

-적립금, 정연석, 메일
-출자금, 적립금


총출자금
	
충적립금

[1] 총출자 = 본인출자+가입출자, 총적립=보조+본인적립+기타
[2] 배익주차장, 2024-01, 본인출자 32,000=> 본인적립64,000에 합쳐서 96,000으로 보이게


--,NVL(A.SELF_ACC_AMT,0)  AS SELF_ACC_AMT --KS, 본인적립금 2%=>3%로 보이기 2025.06.30
	 ,CASE WHEN A.ENTER_CD = 'KS' AND A.PAY_YMD >= '20240101' AND A.ACC_GB IN ('01','02') THEN
			DECODE(SUBSTR(B.JOIN_YMD,1,6), A.PAY_YM,
				 NVL(A.SELF_ACC_AMT,0)+NVL(A.SELF_INV_AMT,0)-1000,
				 NVL(A.SELF_ACC_AMT,0)+NVL(A.SELF_INV_AMT,0)
			)
	 ELSE
			NVL(A.SELF_ACC_AMT,0)
	 END AS SELF_ACC_AMT
--,NVL(A.SELF_INV_AMT,0)  AS SELF_INV_AMT  --KS, 본인출자금 1%=>0으로 보이기 2025.06.30
	 ,CASE WHEN A.ENTER_CD = 'KS' AND A.PAY_YMD >= '20240101' AND A.ACC_GB IN ('01','02') THEN
			0
	  ELSE
			NVL(A.SELF_INV_AMT,0)
	  END AS SELF_INV_AMT
--,NVL(A.JOIN_AMT,0)	 	 	 AS JOIN_AMT  --KS, 가입출자금 가입월 1,000원 보이기 2025.06.30
	 ,CASE WHEN A.ENTER_CD = 'KS' AND A.PAY_YMD >= '20240101' AND A.ACC_GB IN ('01','02') THEN
			DECODE(SUBSTR(B.JOIN_YMD,1,6),A.PAY_YM,
				 1000,
				 NVL(A.JOIN_AMT,0))
	 ELSE
			NVL(A.JOIN_AMT,0)
	 END AS JOIN_AMT