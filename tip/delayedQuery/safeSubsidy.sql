WITH TODAY_HM AS
( SELECT A.ENTER_CD,A.SABUN,A.YMD,A.ORG_CD,A.WORK_ORG_CD,A.DAY_NM,A.WORK_YN AS HOL_YN,A.WORK_ORG_NM,NVL(A.WORK_MIN,0) AS WORK_MIN,A.ACT_IN_HM
,(CASE WHEN GNT_CD = '88' THEN A.WORK_SHM
WHEN GNT_CD IS NOT NULL AND GNT_CD NOT IN ('15','16','135','136') THEN '-' --오전,오후반차 인천,지점교육
WHEN A.TIME_CD IS NULL THEN '-'
WHEN A.WORK_YN = 'N' THEN
CASE WHEN A.REQUEST_USE_TYPE = 'AM' THEN A.HALF_HOLIDAY1 ELSE A.WORK_SHM END
WHEN A.WORK_YN = 'Y' AND A.SHM IS NOT NULL AND A.EHM IS NOT NULL THEN A.SHM
ELSE '-'
END) AS WORK_SHM
,(CASE WHEN GNT_CD = '88' THEN A.WORK_EHM
WHEN GNT_CD IS NOT NULL AND GNT_CD NOT IN ('15','16','135','136') THEN '-' --오전,오후반차 인천,지점교육
WHEN A.TIME_CD IS NULL THEN '-'
WHEN A.WORK_YN = 'N' THEN
CASE WHEN A.REQUEST_USE_TYPE = 'PM' THEN NVL(A.HALF_HOLIDAY1, A.WORK_EHM) ELSE A.WORK_EHM END
WHEN A.WORK_YN = 'Y' AND A.SHM IS NOT NULL AND A.EHM IS NOT NULL THEN A.EHM
ELSE '-'
END) AS WORK_EHM_TODAY
FROM(
SELECT A.ENTER_CD,A.SABUN,A.YMD,A.ORG_CD,A.WORK_ORG_CD,A.WORK_ORG_NM,C.WORK_YN,C.SHM,C.EHM,D.HALF_HOLIDAY1,D.HALF_HOLIDAY2,A.DAY_NM,T.WORK_MIN,X.IN_HM AS ACT_IN_HM
,CASE WHEN (F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD) IS NOT NULL
AND (SELECT X.REQUEST_USE_TYPE FROM TTIM014 X
WHERE X.ENTER_CD = A.ENTER_CD AND X.GNT_CD = F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD)) NOT IN ('AM','PM')
) OR F_TIM_GET_STATUS_CD(A.ENTER_CD,A.SABUN,A.YMD) IN ('CA', 'EA') THEN  '' ELSE NVL(C.STIME_CD, C.TIME_CD) END AS TIME_CD
,F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD) AS GNT_CD
,(SELECT X.REQUEST_USE_TYPE FROM TTIM014 X WHERE X.ENTER_CD = A.ENTER_CD AND X.GNT_CD = F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD)) AS REQUEST_USE_TYPE
,CASE WHEN E.ENTER_CD IS NOT NULL
THEN TO_CHAR(TO_DATE(D.WORK_SHM2, 'HH24MI') + NVL(E.DECRE_SM, 0) / 24 / 60, 'HH24MI')
ELSE NVL(C.SHM, D.WORK_SHM2)
END AS WORK_SHM
,CASE WHEN E.ENTER_CD IS NOT NULL
THEN TO_CHAR(TO_DATE(D.WORK_EHM2, 'HH24MI') - NVL(E.DECRE_EM, 0) / 24 / 60, 'HH24MI')
ELSE NVL(C.EHM, D.WORK_EHM2)
END AS WORK_EHM
FROM(SELECT A1.ENTER_CD,A1.SABUN,A1.NAME,A2.DAY_NM,B.SDATE,C.ORG_CD,C.WORK_ORG_NM,C.WORK_ORG_CD
,A2.SUN_DATE AS YMD
FROM THRM100 A1, THRM151 B, TSYS007 A2, TTIM111_V C
WHERE 1 = 1
AND A1.ENTER_CD = C.ENTER_CD (+)
AND A1.SABUN    = C.SABUN (+)
AND A2.SUN_DATE BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
AND A2.SUN_DATE BETWEEN REPLACE(TRIM('2025-05-01'), '-', '') AND REPLACE(TRIM('2025-05-07'), '-', '')
AND A1.ENTER_CD = 'KS'
AND A1.ENTER_CD = B.ENTER_CD
AND A1.SABUN = B.SABUN
                                                        AND B.SDATE = ( SELECT MAX(BB.SDATE)
FROM THRM151 BB
WHERE BB.ENTER_CD = B.ENTER_CD
AND BB.SABUN    = B.SABUN
AND A2.SUN_DATE BETWEEN BB.SDATE AND NVL(BB.EDATE, '99991231') )
) A
,(SELECT S2.ENTER_CD,S1.WORKDAY_STD,S2.TIME_CD,S2.STIME_CD,S2.HALF_HOLIDAY1,S2.HALF_HOLIDAY2
,S2.WORK_SHM AS WORK_SHM2
,S2.WORK_EHM AS WORK_EHM2
FROM TTIM017 S1, TTIM051 S2
WHERE 1 = 1
AND S1.ENTER_CD      = S2.ENTER_CD(+)
AND S1.TIME_CD       = S2.TIME_CD(+)
) D
, V_TTIM821 E
, TTIM120_V C
, TTIM337 T
, TTIM335 X
WHERE 1 = 1
AND C.ENTER_CD  = 'KS'
AND C.YMD BETWEEN REPLACE(TRIM('2025-05-01'), '-', '') AND REPLACE(TRIM('2025-05-07'), '-', '')
AND C.YMD       = A.YMD
AND A.ENTER_CD  = C.ENTER_CD
AND A.YMD       = C.YMD
AND A.SABUN     = C.SABUN
AND C.ENTER_CD  = D.ENTER_CD(+)
AND C.TIME_CD   = D.TIME_CD(+)
AND C.STIME_CD  = D.STIME_CD(+)
AND A.ENTER_CD  = E.ENTER_CD(+)
AND A.SABUN     = E.SABUN(+)
AND A.YMD       = E.YMD(+)
AND A.ENTER_CD  = T.ENTER_CD(+)
AND A.SABUN     = T.SABUN(+)
AND A.YMD       = T.YMD(+)
AND T.WORK_CD(+)= '0090'
AND A.ENTER_CD = X.ENTER_CD
AND A.YMD = X.YMD
AND A.SABUN = X.SABUN
AND NOT EXISTS ( SELECT 1
FROM TTIM405 Z
WHERE 1 = 1
AND A.ENTER_CD = Z.ENTER_CD
AND A.SABUN = Z.SABUN
AND A.YMD = Z.YMD
AND Z.UPDATE_YN ='N'
AND Z.GNT_CD IN ('14','88','110','111'))
) A WHERE A.WORK_YN != 'Y'),
YESTERDAY_HM AS
( SELECT A.ENTER_CD,A.SABUN,A.YMD,A.DAY_NM,A.WORK_YN AS HOL_YN,A.WORK_ORG_NM,NVL(A.WORK_MIN,0) AS WORK_MIN,A.ACT_OUT_HM
,(CASE WHEN GNT_CD = '88' THEN A.WORK_SHM
WHEN A.TIME_CD IS NULL THEN '-'
WHEN A.WORK_YN = 'N' THEN
CASE WHEN A.REQUEST_USE_TYPE = 'AM' THEN A.HALF_HOLIDAY1 ELSE A.WORK_SHM END
WHEN A.WORK_YN = 'Y' AND A.SHM IS NOT NULL AND A.EHM IS NOT NULL THEN A.SHM
ELSE '-'
END) AS WORK_SHM
,(CASE WHEN GNT_CD = '88' THEN A.WORK_EHM
WHEN A.TIME_CD IS NULL THEN '-'
WHEN A.WORK_YN = 'N' THEN
CASE WHEN A.REQUEST_USE_TYPE = 'PM' THEN NVL(A.HALF_HOLIDAY1, A.WORK_EHM) ELSE A.WORK_EHM END
WHEN A.WORK_YN = 'Y' AND A.SHM IS NOT NULL AND A.EHM IS NOT NULL THEN A.EHM
ELSE '-'
END) AS WORK_EHM
, SUBSTR(A.OVER_TIME,1,4) OVER_TIME
FROM (
SELECT A.ENTER_CD,A.SABUN,A.YMD,A.WORK_ORG_CD,A.ORG_CD,A.WORK_ORG_NM,C.WORK_YN,C.SHM,C.EHM,D.HALF_HOLIDAY1,D.HALF_HOLIDAY2,A.DAY_NM,T.WORK_MIN,X.OUT_HM AS ACT_OUT_HM
,CASE WHEN (F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD) IS NOT NULL
AND (SELECT X.REQUEST_USE_TYPE FROM TTIM014 X
WHERE X.ENTER_CD = A.ENTER_CD AND X.GNT_CD = F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD)) NOT IN ('AM','PM')
) OR F_TIM_GET_STATUS_CD(A.ENTER_CD,A.SABUN,A.YMD) IN ('CA', 'EA') THEN  '' ELSE NVL(C.STIME_CD, C.TIME_CD) END AS TIME_CD
,F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD) AS GNT_CD
,(SELECT X.REQUEST_USE_TYPE FROM TTIM014 X WHERE X.ENTER_CD = A.ENTER_CD AND X.GNT_CD = F_TIM_GET_DAY_GNT_CD(A.ENTER_CD, A.SABUN, A.YMD)) AS REQUEST_USE_TYPE
,CASE WHEN E.ENTER_CD IS NOT NULL
THEN TO_CHAR(TO_DATE(D.WORK_SHM2, 'HH24MI') + NVL(E.DECRE_SM, 0) / 24 / 60, 'HH24MI')
ELSE NVL(C.SHM, D.WORK_SHM2)
END AS WORK_SHM
,CASE WHEN E.ENTER_CD IS NOT NULL
THEN TO_CHAR(TO_DATE(D.WORK_EHM2, 'HH24MI') - NVL(E.DECRE_EM, 0) / 24 / 60, 'HH24MI')
ELSE NVL(C.EHM, D.WORK_EHM2)
END AS WORK_EHM
,(SELECT LISTAGG(X.REAL_E_HM) WITHIN GROUP ( ORDER BY X.REAL_S_HM) AS TEST
FROM TTIM616 X, THRI103 Y
WHERE X.ENTER_CD = A.ENTER_CD
AND X.ENTER_CD = Y.ENTER_CD
AND X.RES_APPL_SEQ = Y.APPL_SEQ
AND Y.APPL_STATUS_CD  = '99' -- 결재완료 건 만 조회
AND X.SABUN = A.SABUN
AND X.YMD = A.YMD) AS OVER_TIME -- 연장근무종료
FROM( SELECT A1.ENTER_CD,A1.SABUN,A1.NAME,A2.DAY_NM,B.SDATE,C.ORG_CD,C.WORK_ORG_NM,C.WORK_ORG_CD
,A2.SUN_DATE AS YMD
FROM THRM100 A1, THRM151 B, TSYS007 A2, TTIM111_V C
WHERE 1 = 1
AND A1.ENTER_CD = C.ENTER_CD (+)
AND A1.SABUN    = C.SABUN (+)
AND A2.SUN_DATE BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
AND A2.SUN_DATE BETWEEN TO_CHAR((TO_DATE(REPLACE(TRIM('2025-05-01'), '-', ''),'YYYYMMDD')-1),'YYYYMMDD') AND REPLACE(TRIM('2025-05-07'), '-', '')
AND A1.ENTER_CD = 'KS'
AND A1.ENTER_CD = B.ENTER_CD
AND A1.SABUN = B.SABUN
                                                        AND B.SDATE = ( SELECT MAX(BB.SDATE)
FROM THRM151 BB
WHERE BB.ENTER_CD = B.ENTER_CD
AND BB.SABUN    = B.SABUN
AND A2.SUN_DATE BETWEEN BB.SDATE AND NVL(BB.EDATE, '99991231') )
) A
,(SELECT S2.ENTER_CD,S1.WORKDAY_STD,S2.TIME_CD,S2.STIME_CD,S2.HALF_HOLIDAY1,S2.HALF_HOLIDAY2
,S2.WORK_SHM AS WORK_SHM2
,S2.WORK_EHM AS WORK_EHM2
FROM TTIM017 S1, TTIM051 S2
WHERE 1 = 1
AND S1.ENTER_CD      = S2.ENTER_CD(+)
AND S1.TIME_CD       = S2.TIME_CD(+)
) D
, V_TTIM821 E
, TTIM120_V C
, TTIM337 T
, TTIM335 X
WHERE 1 = 1
AND C.ENTER_CD  = 'KS'
AND C.YMD BETWEEN TO_CHAR((TO_DATE(REPLACE(TRIM('2025-05-01'), '-', ''),'YYYYMMDD')-1),'YYYYMMDD') AND REPLACE(TRIM('2025-05-07'), '-', '')
AND C.YMD       = A.YMD
AND A.ENTER_CD  = C.ENTER_CD
AND A.YMD       = C.YMD
AND A.SABUN     = C.SABUN
AND C.ENTER_CD  = D.ENTER_CD(+)
AND C.TIME_CD   = D.TIME_CD(+)
AND C.STIME_CD  = D.STIME_CD(+)
AND A.ENTER_CD  = E.ENTER_CD(+)
AND A.SABUN     = E.SABUN(+)
AND A.YMD       = E.YMD(+)
AND A.ENTER_CD  = T.ENTER_CD(+)
AND A.SABUN     = T.SABUN(+)
AND A.YMD       = T.YMD(+)
AND T.WORK_CD(+)= '0110'
AND A.ENTER_CD = X.ENTER_CD
AND A.YMD = X.YMD
AND A.SABUN = X.SABUN
AND NOT EXISTS ( SELECT 1
FROM TTIM405 Z
WHERE 1 = 1
AND A.ENTER_CD = Z.ENTER_CD
AND A.SABUN = Z.SABUN
AND A.YMD = Z.YMD
AND Z.UPDATE_YN ='N'
AND Z.GNT_CD IN ('14','88','110','111'))
) A WHERE A.WORK_YN != 'Y' )
SELECT X.ENTER_CD,X.SABUN,X.WORK_ORG_NM,X.ORG_NM,X.NAME,X.ACT_IN_HM,X.ACT_OUT_HM,X.TODAY_YMD,X.WORK_SHM,X.PAY_YM,X.CHECK_YN,X.OVER_TIME,X.ORG_CD,X.WORK_ORG_CD
,X.TODAY_YMD AS YMD
,X.YESTERDAY_YMD,X.WORK_EHM AS OUT_HM
,X.PAY_TIME AS CAL_TIME
,CASE WHEN X.OVERTIME_YN = 'Y' THEN NVL(X.PAY_TIME_YN,CASE WHEN X.PAY_TIME + X.PAY_TIME_OVER > 600
             --THEN X.PAY_TIME + X.PAY_TIME_OVER - 600
             THEN 600 - X.PAY_TIME
             ELSE X.PAY_TIME_OVER END)
ELSE NVL(X.PAY_TIME_YN,600-X.PAY_TIME)
END AS PAY_TIME
,CASE WHEN X.OVERTIME_YN = 'Y' THEN NVL(X.PAY_MON, (CASE WHEN X.PAY_TIME + X.PAY_TIME_OVER > 600
    --THEN        X.PAY_TIME + X.PAY_TIME_OVER - 600
    THEN 600 - X.PAY_TIME
    ELSE X.PAY_TIME_OVER END
) * 250)
ELSE NVL(X.PAY_MON,(600-X.PAY_TIME)* 250)
END AS PAY_MON --분당250원
,X.OVERTIME_YN
FROM(
SELECT A.ENTER_CD
,A.SABUN
,B.YMD AS YESTERDAY_YMD
,B.WORK_EHM
,B.OVER_TIME
,A.YMD AS TODAY_YMD
,CASE WHEN A.WORK_MIN IS NULL THEN A.WORK_SHM
ELSE TO_CHAR(TO_DATE(A.WORK_SHM,'HH24MI') + A.WORK_MIN/(24*60),'HH24MI') END AS WORK_SHM
,A.WORK_ORG_NM
,A.ORG_CD
,A.WORK_ORG_CD
,F_COM_GET_ORG_NM(A.ENTER_CD,A.ORG_CD,A.YMD) AS ORG_NM
,F_COM_GET_NAMES(A.ENTER_CD,A.SABUN) AS NAME
,A.WORK_MIN AS LATE_MIN, B.WORK_MIN AS EARLY_MIN
,(TO_DATE(A.YMD||CASE WHEN A.WORK_MIN IS NULL THEN A.WORK_SHM --지각 있을 시 시간 더하기
ELSE TO_CHAR(TO_DATE(A.WORK_SHM,'HH24MI') + A.WORK_MIN/(24*60),'HH24MI') END
,'YYYYMMDDHH24MI')
- TO_DATE(CASE WHEN NVL(B.OVER_TIME,B.WORK_EHM) <= B.WORK_SHM THEN TO_CHAR(TO_DATE(B.YMD,'YYYYMMDD')+1,'YYYYMMDD') ELSE B.YMD END
||CASE WHEN B.WORK_MIN IS NULL THEN NVL(B.OVER_TIME,B.WORK_EHM) --조퇴 있을 시 시간 빼기
ELSE TO_CHAR(TO_DATE(NVL(B.OVER_TIME,B.WORK_EHM),'HH24MI') - B.WORK_MIN/(24*60),'HH24MI') END
,'YYYYMMDDHH24MI')
) *24*60 AS PAY_TIME
,D.PAY_TIME AS PAY_TIME_YN
,D.PAY_MON
,D.PAY_YM
,D.CHECK_YN
,A.ACT_IN_HM
,B.ACT_OUT_HM
,NVL(Z.OVERTIME_YN,'O') AS OVERTIME_YN
,CASE WHEN B.OVER_TIME IS NOT NULL THEN
(TO_DATE(B.OVER_TIME,'HH24MI') - B.WORK_MIN/(24*60) - TO_DATE(B.WORK_EHM,'HH24MI')
) *24*60
ELSE 0 END AS PAY_TIME_OVER
FROM TODAY_HM A, YESTERDAY_HM B, TBEN841 D, TBEN840 Z
WHERE 1 = 1
AND A.ENTER_CD = B.ENTER_CD
AND A.SABUN = B.SABUN
AND TO_CHAR(TO_DATE(A.YMD,'YYYYMMDD') - 1,'YYYYMMDD') = B.YMD
AND A.WORK_SHM != '-'
AND B.WORK_EHM != '-'
AND A.WORK_SHM != A.WORK_EHM_TODAY
AND A.ENTER_CD = D.ENTER_CD(+)
AND A.SABUN = D.SABUN(+)
AND A.YMD = D.YMD(+)
--기준관리 추가
AND A.ENTER_CD = Z.ENTER_CD(+)
AND A.ORG_CD = Z.ORG_CD(+)
AND A.WORK_ORG_CD = Z.WORK_ORG_CD(+)
AND A.YMD BETWEEN Z.SDATE(+) AND Z.EDATE(+)
AND D.PAY_YM(+) = REPLACE(TRIM('2025-04'), '-', '')
) X
WHERE 1 = 1
AND X.OVERTIME_YN != 'N'
AND 0 < CASE WHEN X.OVERTIME_YN = 'Y' THEN X.PAY_TIME_OVER
ELSE 1 END
AND NVL(X.PAY_TIME,'9999') < 600 AND NVL(X.PAY_TIME,'9999') > 0
ORDER BY X.SABUN,X.TODAY_YMD;