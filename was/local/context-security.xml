<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- ① opti.properties 파일 로딩 -->
    <context:property-placeholder location="classpath:opti.properties" />

    <!-- ② API 전용 Security 설정 -->
    <http pattern="/api/v1/**"
          auto-config="true"
          use-expressions="true"
          create-session="stateless">

        <intercept-url pattern="/api/v1/**" access="hasRole('API')" />
        <http-basic />
        <csrf disabled="true" />
    </http>

    <!-- ③ 비밀번호 암호화 방식 등록 -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- ④ 인증 사용자 정의 (properties에서 값 주입) -->
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <user-service>
                <user name="${apigee.api.user}" password="${apigee.api.pass}" authorities="ROLE_API" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

</beans:beans>